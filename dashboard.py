import pandas as pd
import streamlit as st
import requests

# import matplotlib.pyplot as plt
import matplotlib
import numpy as np
import shap
import joblib
#import sklearn # if is needed for using columntransformer methods
#from seaborn import scatterplot

def request_prediction(model_uri, columns, data):
    headers = {"Content-Type": "application/json"}

    data_json = {'columns': columns, 'data': data}
    response = requests.request(
        method='POST', headers=headers, url=model_uri, json=data_json)

    if response.status_code != 200:
        raise Exception(
            "Request failed with status {}, {}".format(response.status_code, response.text))

    return response.json()


def main():
    MLFLOW_URI = 'http://127.0.0.1:5000/invocations'
#    CORTEX_URI = 'http://0.0.0.0:8890/'
#    RAY_SERVE_URI = 'http://127.0.0.1:8000/regressor'

#    api_choice = st.sidebar.selectbox('Which API doyou want to use', ['MLflow', 'Cortex', 'Ray Serve'])

    st.title('Credit default prediction')
    
    input_choice = st.sidebar.selectbox('How do you want to input the data?', ["Input just the client's number", "Input all values manually"], index=0)
   
    plot_choice = st.sidebar.selectbox('Which plot do you want to display?', ['Sex-age default probability', 
    'Sex-age distribution default cients', 
    'Employed vs credit amount scatterplot',
    'Decision plot for the individual client',
    'Global feature importances'], index=0)
    
    
    if input_choice == "Input just the client's number":
#       in real job we retrieve the client's data from a remote server, but for study purposes I store them here
        clients_database = pd.DataFrame(pd.DataFrame([['Working', 9.296013353714333, 0.4, 0.6120885096567825, 0.7530673920730478, 0.6872367312552654, 1.3565791038427395, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 2.0, 0.0, 7.0, 0.0, 0.0, 0.0, 8.0, 1.0, 0.0, 0.0, 23740.0, 1.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 23740.0, 0.0, 1.0],
        ['Working', 10.554952994101429, 0.4133100212686366, 0.5821345097931376, 0.7922644738669378, 0.012742472201931662, 1.3250169173409996, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 12321.0, 1.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12321.0, 0.0, 2.0],
        ['Working', 9.715017130155296, 0.4, 0.4487012673963373, 0.4,0.08444731924680178, 1.3104015327308003, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 13914.0, 1.0, 1.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13914.0, 2.0]], 
        index=[40449, 160246, 43761],
        columns = ["NAME_INCOME_TYPE", "AMT_ANNUITY", "EXT_SOURCE_1", "EXT_SOURCE_2", "EXT_SOURCE_3", "DAYS_EMPLOYED_PERC", "CREDIT_TERM", 
        "STATUS_0_SUM", "STATUS_1_SUM", "STATUS_2_SUM", "STATUS_3_SUM", "STATUS_4_SUM", "STATUS_5_SUM", "STATUS_C_SUM", "STATUS_X_SUM", 
        "CREDIT_ACTIVE_Active_SUM", "CREDIT_ACTIVE_Bad_debt_SUM", "CREDIT_ACTIVE_Closed_SUM", "CREDIT_ACTIVE_Sold_SUM", 
        "CREDIT_TYPE_Another_type_of_loan_SUM", "CREDIT_TYPE_Cash_loan_(non-earmarked)_SUM", "CREDIT_TYPE_Consumer_credit_SUM", "CREDIT_TYPE_Credit_card_SUM", "CREDIT_TYPE_Microloan_SUM", "CREDIT_TYPE_Unknown_type_of_loan_SUM", 
        "DAYS_BIRTH", "FLAG_EMP_PHONE", "FLAG_WORK_PHONE", "FLAG_PHONE", "REGION_RATING_CLIENT_W_CITY", "REG_CITY_NOT_LIVE_CITY", "REG_CITY_NOT_WORK_CITY", "LIVE_CITY_NOT_WORK_CITY", "FLAG_DOCUMENT_2", "FLAG_DOCUMENT_3", "FLAG_DOCUMENT_6", "FLAG_DOCUMENT_9", 
        "FLAG_DOCUMENT_13", "FLAG_DOCUMENT_14", "FLAG_DOCUMENT_16", "FLAG_DOCUMENT_21", "F_AGE", "M_AGE", "CNT_ADULTS"]
        ))
       
        CLIENT_INDEX = st.selectbox('Select client index', clients_database.index.values)
        data = clients_database.loc[CLIENT_INDEX, :].values.tolist() # TypeError: Object of type ndarray is not JSON serializable

        columns = clients_database.columns.tolist() # TypeError: Object of type ndarray is not JSON serializable
        # columns = [x.replace("'", '"') for x in columns] # TypeError: Object of type ndarray is not JSON serializable
        # st.write(columns)   # for debugging

       
     #   for i in range(clients_database.shape[1]): # or for i in range(len(columns)):
     #       st.write(f'{columns[i]}: {data[i]}')
        
        # variables for plots
#        CODE_GENDER = 'F' if data[-3] != 0 else 'M'
        CODE_GENDER = 'F' if clients_database.loc[CLIENT_INDEX, 'F_AGE'] != 0 else 'M' # if the columns order changes later, I can assign all the variables this way
        DAYS_BIRTH = clients_database.loc[CLIENT_INDEX, 'DAYS_BIRTH']
#        DAYS_EMPLOYED_PERC = data[5]
        DAYS_EMPLOYED_PERC = clients_database.loc[CLIENT_INDEX, 'DAYS_EMPLOYED_PERC']
#        AMT_CREDIT = data[1] * data[6]
        AMT_CREDIT = clients_database.loc[CLIENT_INDEX, 'AMT_ANNUITY'] * clients_database.loc[CLIENT_INDEX, 'CREDIT_TERM']
        
        data = [data] # a crutch for building a shap plot

    if input_choice == "Input all values manually":
        NAME_INCOME_TYPE = st.selectbox('Select income type',
            ('Working', 'State servant', 'Commercial associate', 'Pensioner', 'Unemployed', 'Student', 'Businessman', 'Maternity leave'))
    #    st.write('You selected:', option)
        AMT_ANNUITY = st.number_input('Loan annuity	natural logarithm: enter any positive float number',
                                       min_value=0., max_value=100., value=12., step=1.)
        AMT_CREDIT = st.number_input('Credit amount of the loan	natural logarithm: enter any positive float number',
                                       min_value=0., max_value=100., value=12., step=1.)
        EXT_SOURCE_1 = st.number_input('Normalized score from external data source 1: enter any float number between 0 and 1',
                                       min_value=0., max_value=1., value=0., step=1.)
        EXT_SOURCE_2 = st.number_input('Normalized score from external data source 2: enter any float number between 0 and 1',
                                       min_value=0., max_value=1., value=0., step=1.)
        EXT_SOURCE_3 = st.number_input('Normalized score from external data source 3: enter any float number between 0 and 1',
                                       min_value=0., max_value=1., value=0., step=1.)
        DAYS_BIRTH = st.number_input('Client age in days at the time of application: enter any positive integer number',
                                       min_value=0., max_value=50000., value=16500., step=1.)
        DAYS_EMPLOYED = st.number_input('How many days before the application the person started current employment: enter any positive float number',
                                       min_value=0., max_value=50000., value=0., step=1.)
        status_unique = ['0', '1', '2', '3', '4', '5', 'C', 'X']
        STATUS = st.selectbox('Status of Credit Bureau loan during the month: active, closed, DPD0-30. C means closed, X means status unknown, 0 means no DPD, 1 means maximal did during month between 1-30, 2 means DPD 31-60... 5 means DPD 120+ or sold or written off )', status_unique, index=7)
        credit_active_unique = ['Active', 'Bad_debt', 'Closed', 'Sold']
        CREDIT_ACTIVE = st.selectbox('Status of the Credit Bureau (CB) reported credits', ['No reported credits', *credit_active_unique]) # if there were no credits before or another issue
        credit_type_unique = ["Another_type_of_loan", "Cash_loan_(non-earmarked)", "Consumer_credit", "Credit_card", "Microloan", "Unknown_type_of_loan",]
        CREDIT_TYPE = st.selectbox('Type of Credit Bureau credit (Car, cash,...) For no reported credits select unknown type of loan', credit_type_unique) # eventually I can fill all the columns with 0 when no reported credits. then I do as with CREDIT_ACTIVE
        FLAG_EMP_PHONE = st.number_input('Did client provide work phone (1=YES, 0=NO): enter 0 or 1',
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_WORK_PHONE = st.number_input('Did client provide home phone (1=YES, 0=NO): enter 0 or 1',
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_PHONE = st.number_input('Did client provide home phone (again) (1=YES, 0=NO): enter 0 or 1',
                                  min_value=0., max_value=1., value=0., step=1.)
        REGION_RATING_CLIENT_W_CITY = st.number_input('Our rating of the region where client lives with taking city into account (1,2,3)',
                                  min_value=1., max_value=3., value=2., step=1.)
        REG_CITY = st.text_input('Registration city', 'Paris')
        LIVE_CITY = st.text_input('Live city', 'Paris')
        WORK_CITY = st.text_input('Work city', 'Paris')
        FLAG_DOCUMENT_2 = st.number_input('Did client provide document 2: enter 0 or 1', #
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_DOCUMENT_3 = st.number_input('Did client provide document 3: enter 0 or 1', #
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_DOCUMENT_6 = st.number_input('Did client provide document 6: enter 0 or 1', #
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_DOCUMENT_9 = st.number_input('Did client provide document 9: enter 0 or 1', #
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_DOCUMENT_13 = st.number_input('Did client provide document 13: enter 0 or 1', #
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_DOCUMENT_14 = st.number_input('Did client provide document 14: enter 0 or 1', #
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_DOCUMENT_16 = st.number_input('Did client provide document 16: enter 0 or 1', #
                                  min_value=0., max_value=1., value=0., step=1.)
        FLAG_DOCUMENT_21 = st.number_input('Did client provide document 21: enter 0 or 1', #
                                  min_value=0., max_value=1., value=0., step=1.)
        CNT_CHILDREN = st.number_input('Number of children the client has', 
                                  min_value=0., value=0., step=1.)
        CNT_FAM_MEMBERS = st.number_input('How many family members does client have', 
                                  min_value=1., value=1., step=1.)
        CODE_GENDER = st.text_input('Gender of the client: please enter M for masculin or F for feminin', 'M')

        columns = ["NAME_INCOME_TYPE", "AMT_ANNUITY", "EXT_SOURCE_1", "EXT_SOURCE_2", "EXT_SOURCE_3", "DAYS_EMPLOYED_PERC", "CREDIT_TERM", 
        "STATUS_0_SUM", "STATUS_1_SUM", "STATUS_2_SUM", "STATUS_3_SUM", "STATUS_4_SUM", "STATUS_5_SUM", "STATUS_C_SUM", "STATUS_X_SUM", 
        "CREDIT_ACTIVE_Active_SUM", "CREDIT_ACTIVE_Bad_debt_SUM", "CREDIT_ACTIVE_Closed_SUM", "CREDIT_ACTIVE_Sold_SUM", 
        "CREDIT_TYPE_Another_type_of_loan_SUM", "CREDIT_TYPE_Cash_loan_(non-earmarked)_SUM", "CREDIT_TYPE_Consumer_credit_SUM", "CREDIT_TYPE_Credit_card_SUM", "CREDIT_TYPE_Microloan_SUM", "CREDIT_TYPE_Unknown_type_of_loan_SUM", 
        "DAYS_BIRTH", "FLAG_EMP_PHONE", "FLAG_WORK_PHONE", "FLAG_PHONE", "REGION_RATING_CLIENT_W_CITY", "REG_CITY_NOT_LIVE_CITY", "REG_CITY_NOT_WORK_CITY", "LIVE_CITY_NOT_WORK_CITY", "FLAG_DOCUMENT_2", "FLAG_DOCUMENT_3", "FLAG_DOCUMENT_6", "FLAG_DOCUMENT_9", 
        "FLAG_DOCUMENT_13", "FLAG_DOCUMENT_14", "FLAG_DOCUMENT_16", "FLAG_DOCUMENT_21", "F_AGE", "M_AGE", "CNT_ADULTS"]
#        st.write(columns)  # for debugging

        DAYS_EMPLOYED_PERC = DAYS_EMPLOYED/DAYS_BIRTH # for the scatterplot
        data = [[NAME_INCOME_TYPE, AMT_ANNUITY, EXT_SOURCE_1, EXT_SOURCE_2, EXT_SOURCE_3, DAYS_EMPLOYED_PERC, AMT_CREDIT/AMT_ANNUITY, *[int(i == STATUS) for i in status_unique], *[int(i==CREDIT_ACTIVE) for i in credit_active_unique], *[int(i==CREDIT_TYPE) for i in credit_type_unique], 
        DAYS_BIRTH, FLAG_EMP_PHONE, FLAG_WORK_PHONE, FLAG_PHONE, REGION_RATING_CLIENT_W_CITY, int(REG_CITY != LIVE_CITY), int(REG_CITY != WORK_CITY), int(LIVE_CITY != WORK_CITY), FLAG_DOCUMENT_2, FLAG_DOCUMENT_3, FLAG_DOCUMENT_6, FLAG_DOCUMENT_9, FLAG_DOCUMENT_13, FLAG_DOCUMENT_14, 
        FLAG_DOCUMENT_16, FLAG_DOCUMENT_21, DAYS_BIRTH if CODE_GENDER == 'F' else 0, DAYS_BIRTH if CODE_GENDER == 'M' else 0, CNT_FAM_MEMBERS - CNT_CHILDREN]]

       
    predict_btn = st.button('Predict')
    if predict_btn:
        

        pred = None

#        if api_choice == 'MLflow':
        pred = request_prediction(MLFLOW_URI, columns, data)[0]
#        elif api_choice == 'Cortex':
#            pred = request_prediction(CORTEX_URI, columns, data)[0]
#        elif api_choice == 'Ray Serve':
#            pred = request_prediction(RAY_SERVE_URI, columns, data)[0]
        st.write(
            'The predicted flag of the credit default is {:.1f}'.format(pred))

# Graphics / plots   
    if plot_choice == 'Sex-age default probability':
        st.write("Default probability for different ages and sexes:") 
        st.write("The distribution of clients who payed their credits (blue line) and those who had difficulties (orange line): represents the probability that a given client will fail the credit. The height is adjusted in a way that the area under the curves equals 1.")
        # draw the graphics (age sex distribution, with the age of client indicated on it, common norm=True)
        # values are extracted from seaborn kdeplot
        male_ok_x = np.array([17.55566165, 17.83150478, 18.10734791, 18.38319105, 18.65903418, 18.93487731, 19.21072045, 19.48656358, 19.76240671, 20.03824985, 20.31409298, 20.58993611, 20.86577924, 21.14162238, 21.41746551, 21.69330864, 21.96915178, 22.24499491, 22.52083804, 22.79668118, 23.07252431, 23.34836744, 23.62421057, 23.90005371, 24.17589684, 24.45173997, 24.72758311, 25.00342624, 25.27926937, 25.55511251, 25.83095564, 26.10679877, 26.38264191, 26.65848504, 26.93432817, 27.2101713, 27.48601444, 27.76185757, 28.0377007, 28.31354384, 28.58938697, 28.8652301, 29.14107324, 29.41691637, 29.6927595, 29.96860264, 30.24444577, 30.5202889, 30.79613203, 31.07197517, 31.3478183, 31.62366143, 31.89950457, 32.1753477, 32.45119083, 32.72703397, 33.0028771, 33.27872023, 33.55456337, 33.8304065, 34.10624963, 34.38209276, 34.6579359, 34.93377903, 35.20962216, 35.4854653, 35.76130843, 36.03715156, 36.3129947, 36.58883783, 36.86468096, 37.1405241, 37.41636723, 37.69221036, 37.96805349, 38.24389663, 38.51973976, 38.79558289, 39.07142603, 39.34726916, 39.62311229, 39.89895543, 40.17479856, 40.45064169, 40.72648483, 41.00232796, 41.27817109, 41.55401422, 41.82985736, 42.10570049, 42.38154362, 42.65738676, 42.93322989, 43.20907302, 43.48491616, 43.76075929, 44.03660242, 44.31244556, 44.58828869, 44.86413182, 45.13997495, 45.41581809, 45.69166122, 45.96750435, 46.24334749, 46.51919062, 46.79503375, 47.07087689, 47.34672002, 47.62256315, 47.89840629, 48.17424942, 48.45009255, 48.72593568, 49.00177882, 49.27762195, 49.55346508, 49.82930822, 50.10515135, 50.38099448, 50.65683762, 50.93268075, 51.20852388, 51.48436702, 51.76021015, 52.03605328, 52.31189641, 52.58773955, 52.86358268, 53.13942581, 53.41526895, 53.69111208, 53.96695521, 54.24279835, 54.51864148, 54.79448461, 55.07032775, 55.34617088, 55.62201401, 55.89785714, 56.17370028, 56.44954341, 56.72538654, 57.00122968, 57.27707281, 57.55291594, 57.82875908, 58.10460221, 58.38044534, 58.65628848, 58.93213161, 59.20797474, 59.48381787, 59.75966101, 60.03550414, 60.31134727, 60.58719041, 60.86303354, 61.13887667, 61.41471981, 61.69056294, 61.96640607, 62.24224921, 62.51809234, 62.79393547, 63.0697786, 63.34562174, 63.62146487, 63.897308, 64.17315114, 64.44899427, 64.7248374, 65.00068054, 65.27652367, 65.5523668, 65.82820994, 66.10405307, 66.3798962, 66.65573933, 66.93158247, 67.2074256, 67.48326873, 67.75911187, 68.034955, 68.31079813, 68.58664127, 68.8624844, 69.13832753, 69.41417067, 69.6900138, 69.96585693, 70.24170006, 70.5175432, 70.79338633, 71.06922946, 71.3450726, 71.62091573, 71.89675886, 72.172602, 72.44844513])
        male_ok_y = np.array([1.42823524e-06, 3.11829069e-06, 6.48784567e-06, 1.28785791e-05, 2.44219519e-05, 4.43033918e-05, 7.69952582e-05, 0.000128381042, 0.000205676695, 0.000317056433, 0.000470918518, 0.000674787096, 0.00093393878, 0.00124995485, 0.00161950338, 0.00203370685, 0.00247840584, 0.00293546601, 0.00338501718, 0.00380823462, 0.00419007554, 0.00452135941, 0.00479975529, 0.00502956014, 0.00522049419, 0.00538596208, 0.00554124203, 0.00570187767, 0.00588227478, 0.0060943139, 0.00634581146, 0.00663890701, 0.00696879026, 0.00732339197, 0.00768456673, 0.00803086693, 0.00834140961, 0.0085998557, 0.0087973997, 0.00893398012, 0.00901751978, 0.00906161252, 0.00908243728, 0.00909570286, 0.00911419066, 0.00914615154, 0.0091945867, 0.00925735263, 0.00932801771, 0.0093973665, 0.00945534428, 0.00949309536, 0.00950466493, 0.00948798983, 0.00944500307, 0.00938094344, 0.00930317677, 0.00921991047, 0.00913910792, 0.00906774483, 0.00901138884, 0.00897399392, 0.00895780008, 0.00896328768, 0.0089892054, 0.00903273016, 0.00908980792, 0.00915566976, 0.00922544412, 0.00929472716, 0.00935996305, 0.00941853873, 0.00946860162, 0.00950872041, 0.00953757829, 0.00955387368, 0.00955650669, 0.00954498819, 0.00951988852, 0.00948310113, 0.00943775548, 0.00938774811, 0.0093370095, 0.00928872327, 0.00924472429, 0.00920522599, 0.00916890557, 0.00913326241, 0.0090951042, 0.00905102233, 0.00899777696, 0.00893258653, 0.00885336722, 0.00875897185, 0.00864943693, 0.0085261859, 0.00839209166, 0.00825130163, 0.00810878008, 0.00796961081, 0.00783819279, 0.00771751805, 0.00760871945, 0.00751101391, 0.00742206137, 0.00733864413, 0.00725748289, 0.0071759736, 0.00709266456, 0.00700738245, 0.00692102677, 0.0068351444, 0.00675144016, 0.00667136773, 0.00659589451, 0.00652546871, 0.00646015987, 0.00639990646, 0.00634478679, 0.00629522941, 0.00625209573, 0.00621659574, 0.00619003282, 0.0061734102, 0.00616696628, 0.00616973749, 0.00617927006, 0.00619160138, 0.0062015896, 0.00620358318, 0.00619231072, 0.0061637806, 0.00611595493, 0.00604902131, 0.00596520745, 0.0058682151, 0.00576243978, 0.00565216878, 0.00554092309, 0.00543105992, 0.00532370196, 0.00521900504, 0.00511670458, 0.00501679026, 0.00492007872, 0.00482843733, 0.00474449961, 0.0046708966, 0.00460924136, 0.00455924388, 0.00451832336, 0.00448191513, 0.00444441235, 0.00440045244, 0.00434615071, 0.00427992878, 0.00420274205, 0.00411769845, 0.00402921043, 0.00394190235, 0.00385951229, 0.00378400134, 0.00371503013, 0.00364988759, 0.00358386937, 0.00351101835, 0.00342508272, 0.00332052968, 0.00319346971, 0.00304237386, 0.00286848541, 0.00267583964, 0.00247083299, 0.00226134971, 0.0020555581, 0.00186059676, 0.00168143504, 0.00152017602, 0.00137597202, 0.00124557244, 0.00112436593, 0.001007657, 0.000891861698, 0.000775333818, 0.000658637738, 0.000544240667, 0.000435757719, 0.000336996189, 0.000251073758, 0.000179825734, 0.000123599162, 8.14053901e-05, 5.1311638e-05, 3.09187133e-05, 1.77925028e-05, 9.76940023e-06, 5.11386641e-06, 2.55001336e-06, 1.21040594e-06, 5.46538239e-07])
        male_fail_x = np.array([15.8862862, 16.17776506, 16.46924392, 16.76072277, 17.05220163, 17.34368049, 17.63515935, 17.92663821, 18.21811706, 18.50959592, 18.80107478, 19.09255364, 19.3840325, 19.67551135, 19.96699021, 20.25846907, 20.54994793, 20.84142679, 21.13290564, 21.4243845, 21.71586336, 22.00734222, 22.29882108, 22.59029994, 22.88177879, 23.17325765, 23.46473651, 23.75621537, 24.04769423, 24.33917308, 24.63065194, 24.9221308, 25.21360966, 25.50508852, 25.79656737, 26.08804623, 26.37952509, 26.67100395, 26.96248281, 27.25396167, 27.54544052, 27.83691938, 28.12839824, 28.4198771, 28.71135596, 29.00283481, 29.29431367, 29.58579253, 29.87727139, 30.16875025, 30.4602291, 30.75170796, 31.04318682, 31.33466568, 31.62614454, 31.91762339, 32.20910225, 32.50058111, 32.79205997, 33.08353883, 33.37501769, 33.66649654, 33.9579754, 34.24945426, 34.54093312, 34.83241198, 35.12389083, 35.41536969, 35.70684855, 35.99832741, 36.28980627, 36.58128512, 36.87276398, 37.16424284, 37.4557217, 37.74720056, 38.03867941, 38.33015827, 38.62163713, 38.91311599, 39.20459485, 39.49607371, 39.78755256, 40.07903142, 40.37051028, 40.66198914, 40.953468, 41.24494685, 41.53642571, 41.82790457, 42.11938343, 42.41086229, 42.70234114, 42.99382, 43.28529886, 43.57677772, 43.86825658, 44.15973544, 44.45121429, 44.74269315, 45.03417201, 45.32565087, 45.61712973, 45.90860858, 46.20008744, 46.4915663, 46.78304516, 47.07452402, 47.36600287, 47.65748173, 47.94896059, 48.24043945, 48.53191831, 48.82339716, 49.11487602, 49.40635488, 49.69783374, 49.9893126, 50.28079146, 50.57227031, 50.86374917, 51.15522803, 51.44670689, 51.73818575, 52.0296646, 52.32114346, 52.61262232, 52.90410118, 53.19558004, 53.48705889, 53.77853775, 54.07001661, 54.36149547, 54.65297433, 54.94445319, 55.23593204, 55.5274109, 55.81888976, 56.11036862, 56.40184748, 56.69332633, 56.98480519, 57.27628405, 57.56776291, 57.85924177, 58.15072062, 58.44219948, 58.73367834, 59.0251572, 59.31663606, 59.60811491, 59.89959377, 60.19107263, 60.48255149, 60.77403035, 61.06550921, 61.35698806, 61.64846692, 61.93994578, 62.23142464, 62.5229035, 62.81438235, 63.10586121, 63.39734007, 63.68881893, 63.98029779, 64.27177664, 64.5632555, 64.85473436, 65.14621322, 65.43769208, 65.72917093, 66.02064979, 66.31212865, 66.60360751, 66.89508637, 67.18656523, 67.47804408, 67.76952294, 68.0610018, 68.35248066, 68.64395952, 68.93543837, 69.22691723, 69.51839609, 69.80987495, 70.10135381, 70.39283266, 70.68431152, 70.97579038, 71.26726924, 71.5587481, 71.85022696, 72.14170581, 72.43318467, 72.72466353, 73.01614239, 73.30762125, 73.5991001, 73.89057896])
        male_fail_y = np.array([2.87582631e-07, 5.1214677e-07, 8.89731111e-07, 1.50818664e-06, 2.49508284e-06, 4.02950715e-06, 6.35420518e-06, 9.7863293e-06, 1.4724361e-05, 2.16482118e-05, 3.11092994e-05, 4.37077597e-05, 6.00550717e-05, 8.07223077e-05, 0.000106176855, 0.000136713456, 0.00017238823, 0.000212966276, 0.000257893856, 0.00030630451, 0.000357064643, 0.000408858512, 0.000460305986, 0.00051010012, 0.000557146801, 0.00060068657, 0.00064037985, 0.000676341166, 0.000709114951, 0.000739594059, 0.00076889068, 0.000798176789, 0.000828516146, 0.000860711592, 0.000895189465, 0.000931937614, 0.000970505391, 0.00101006436, 0.00104951895, 0.00108764843, 0.00112325734, 0.00115531107, 0.00118303756, 0.00120598321, 0.00122402022, 0.00123731119, 0.00124624334, 0.00125134803, 0.00125322107, 0.001252456, 0.00124959766, 0.00124511782, 0.00123940991, 0.00123279724, 0.00122554768, 0.00121788896, 0.00121002029, 0.00120211859, 0.00119433961, 0.00118681525, 0.00117964925, 0.00117291261, 0.00116664004, 0.00116082794, 0.00115543422, 0.00115038021, 0.00114555525, 0.00114082376, 0.00113603505, 0.00113103464, 0.00112567602, 0.00111983113, 0.00111339828, 0.00110630673, 0.00109851809, 0.00109002528, 0.00108084992, 0.0010710389, 0.00106066055, 0.00104979999, 0.00103855367, 0.00102702291, 0.00101530699, 0.00100349686, 0.000991670378, 0.00097989, 0.000968202937, 0.00095664307, 0.000945233438, 0.000933988111, 0.000922912857, 0.000912004864, 0.000901252544, 0.000890636733, 0.0008801342, 0.000869723444, 0.00085939161, 0.000849140542, 0.00083898981, 0.000828975266, 0.000819142967, 0.000809539785, 0.000800203164, 0.000791152809, 0.000782386595, 0.000773881739, 0.000765600805, 0.000757500865, 0.0007495435, 0.000741703394, 0.00073397392, 0.00072636902, 0.000718921515, 0.000711678449, 0.00070469422, 0.000698022118, 0.000691704785, 0.000685764156, 0.000680191729, 0.000674940439, 0.000669919767, 0.000664995697, 0.000659996651, 0.000654725582, 0.000648977146, 0.000642557708, 0.000635305196, 0.00062710569, 0.000617904237, 0.000607708509, 0.000596585281, 0.000584650911, 0.000572057849, 0.000558979462, 0.000545595256, 0.000532078002, 0.000518583575, 0.000505243695, 0.000492161291, 0.00047940803, 0.000467023585, 0.000455016355, 0.000443365649, 0.000432025493, 0.000420930339, 0.000410002818, 0.000399163349, 0.000388340965, 0.000377484131, 0.000366569939, 0.000355609859, 0.000344650477, 0.000333768238, 0.000323058242, 0.000312618244, 0.000302530093, 0.000292841569, 0.000283551823, 0.000274603228, 0.000265881547, 0.000257225022, 0.000248441522, 0.000239331547, 0.000229713875, 0.00021945013, 0.000208464603, 0.000196756314, 0.000184401412, 0.000171545491, 0.000158386977, 0.000145154191, 0.00013207974, 0.000119376312, 0.000107217591, 9.5726973e-05, 8.49751743e-05, 7.49860695e-05, 6.57485691e-05, 5.7231376e-05, 4.93972644e-05, 4.22140862e-05, 3.56608303e-05, 2.97284167e-05, 2.44161293e-05, 1.97254192e-05, 1.56530881e-05, 1.21856297e-05, 9.29590535e-06, 6.94258866e-06, 5.07212326e-06, 3.6224628e-06, 2.52765266e-06, 1.72235372e-06, 1.14562514e-06, 7.43579084e-07, 4.70810083e-07, 2.9072602e-07, 1.75041032e-07, 1.02735812e-07, 5.87686826e-08])

        female_ok_x = np.array([17.33141439, 17.60739252, 17.88337066, 18.15934879, 18.43532693, 18.71130507, 18.9872832, 19.26326134, 19.53923947, 19.81521761, 20.09119574, 20.36717388, 20.64315202, 20.91913015, 21.19510829, 21.47108642, 21.74706456, 22.02304269, 22.29902083, 22.57499896, 22.8509771, 23.12695524, 23.40293337, 23.67891151, 23.95488964, 24.23086778, 24.50684591, 24.78282405, 25.05880218, 25.33478032, 25.61075846, 25.88673659, 26.16271473, 26.43869286, 26.714671, 26.99064913, 27.26662727, 27.5426054, 27.81858354, 28.09456168, 28.37053981, 28.64651795, 28.92249608, 29.19847422, 29.47445235, 29.75043049, 30.02640862, 30.30238676, 30.5783649, 30.85434303, 31.13032117, 31.4062993, 31.68227744, 31.95825557, 32.23423371, 32.51021184, 32.78618998, 33.06216812, 33.33814625, 33.61412439, 33.89010252, 34.16608066, 34.44205879, 34.71803693, 34.99401506, 35.2699932, 35.54597134, 35.82194947, 36.09792761, 36.37390574, 36.64988388, 36.92586201, 37.20184015, 37.47781828, 37.75379642, 38.02977456, 38.30575269, 38.58173083, 38.85770896, 39.1336871, 39.40966523, 39.68564337, 39.96162151, 40.23759964, 40.51357778, 40.78955591, 41.06553405, 41.34151218, 41.61749032, 41.89346845, 42.16944659, 42.44542473, 42.72140286, 42.997381, 43.27335913, 43.54933727, 43.8253154, 44.10129354, 44.37727167, 44.65324981, 44.92922795, 45.20520608, 45.48118422, 45.75716235, 46.03314049, 46.30911862, 46.58509676, 46.86107489, 47.13705303, 47.41303117, 47.6890093, 47.96498744, 48.24096557, 48.51694371, 48.79292184, 49.06889998, 49.34487811, 49.62085625, 49.89683439, 50.17281252, 50.44879066, 50.72476879, 51.00074693, 51.27672506, 51.5527032, 51.82868133, 52.10465947, 52.38063761, 52.65661574, 52.93259388, 53.20857201, 53.48455015, 53.76052828, 54.03650642, 54.31248455, 54.58846269, 54.86444083, 55.14041896, 55.4163971, 55.69237523, 55.96835337, 56.2443315, 56.52030964, 56.79628777, 57.07226591, 57.34824405, 57.62422218, 57.90020032, 58.17617845, 58.45215659, 58.72813472, 59.00411286, 59.28009099, 59.55606913, 59.83204727, 60.1080254, 60.38400354, 60.65998167, 60.93595981, 61.21193794, 61.48791608, 61.76389422, 62.03987235, 62.31585049, 62.59182862, 62.86780676, 63.14378489, 63.41976303, 63.69574116, 63.9717193, 64.24769744, 64.52367557, 64.79965371, 65.07563184, 65.35160998, 65.62758811, 65.90356625, 66.17954438, 66.45552252, 66.73150066, 67.00747879, 67.28345693, 67.55943506, 67.8354132, 68.11139133, 68.38736947, 68.6633476, 68.93932574, 69.21530388, 69.49128201, 69.76726015, 70.04323828, 70.31921642, 70.59519455, 70.87117269, 71.14715082, 71.42312896, 71.6991071, 71.97508523, 72.25106337])
        female_ok_y = np.array([7.53704542e-07, 1.92863396e-06, 4.63467409e-06, 1.04662718e-05, 2.22289696e-05, 4.44460577e-05, 8.37647382e-05, 0.000149019109, 0.000250692528, 0.000399638659, 0.000605174914, 0.000872967371, 0.00120332319, 0.00159045343, 0.00202295227, 0.00248530908, 0.00295995979, 0.00342934493, 0.00387764032, 0.00429208123, 0.00466393362, 0.00498913841, 0.00526857457, 0.00550789172, 0.00571699081, 0.00590938165, 0.00610166072, 0.00631314765, 0.00656536341, 0.00688073834, 0.00727994877, 0.00777773625, 0.00837788377, 0.00906887792, 0.00982219932, 0.0105947681, 0.0113357925, 0.0119965736, 0.0125404773, 0.0129499859, 0.0132287, 0.0133979593, 0.0134895794, 0.0135372975, 0.0135695241, 0.0136050839, 0.0136523196, 0.0137108134, 0.0137744389, 0.0138345413, 0.0138825309, 0.0139116977, 0.0139183611, 0.0139024927, 0.0138678179, 0.0138213282, 0.0137722069, 0.0137303713, 0.0137050115, 0.0137035343, 0.0137311697, 0.0137912183, 0.0138856541, 0.0140156456, 0.0141816058, 0.0143826124, 0.0146153864, 0.0148733252, 0.0151461997, 0.0154209392, 0.0156834907, 0.0159212406, 0.0161251813, 0.0162910706, 0.0164192477, 0.0165133288, 0.0165784213, 0.0166195554, 0.0166407573, 0.016644776, 0.0166332035, 0.0166067352, 0.0165655104, 0.0165096317, 0.0164399089, 0.0163586329, 0.0162699794, 0.016179659, 0.0160937202, 0.0160168092, 0.0159504918, 0.0158922961, 0.0158359463, 0.0157728854, 0.0156947454, 0.0155960315, 0.0154760988, 0.0153396459, 0.0151954515, 0.0150537672, 0.0149233441, 0.0148092188, 0.0147120212, 0.0146288738, 0.0145552759, 0.0144870376, 0.0144214694, 0.0143575145, 0.0142950562, 0.0142339753, 0.0141735436, 0.0141124585, 0.0140494525, 0.0139841264, 0.0139176122, 0.0138528257, 0.0137943077, 0.0137477864, 0.0137195867, 0.0137159232, 0.013742088, 0.0138016463, 0.0138958837, 0.0140237538, 0.0141823564, 0.0143676529, 0.0145749327, 0.0147986609, 0.0150317289, 0.015264572, 0.0154848458, 0.0156782389, 0.0158305934, 0.0159309699, 0.0159747913, 0.0159659276, 0.0159166882, 0.0158452734, 0.0157711869, 0.0157100494, 0.0156696956, 0.0156490413, 0.0156400987, 0.0156321899, 0.0156165276, 0.0155893046, 0.0155522127, 0.0155104698, 0.015469416, 0.0154311605, 0.0153925567, 0.0153451696, 0.0152771834, 0.0151766216, 0.0150349295, 0.0148498814, 0.0146269265, 0.0143784677, 0.0141211425, 0.0138718237, 0.0136435329, 0.0134425214, 0.0132673343, 0.0131098672, 0.0129576338, 0.0127960824, 0.0126100568, 0.0123842593, 0.0121033965, 0.0117530493, 0.0113219182, 0.0108051441, 0.0102074494, 0.00954449128, 0.00884134367, 0.00812813693, 0.00743401362, 0.00678115767, 0.00618057588, 0.00563073878, 0.00511941263, 0.0046282233, 0.00413877481, 0.00363863596, 0.00312543272, 0.0026078091, 0.00210305353, 0.00163233335, 0.00121523331, 0.00086534179, 0.000588018758, 0.000380561258, 0.000234181543, 0.00013680991, 7.57734197e-05, 3.97366245e-05, 1.9706812e-05, 9.23216314e-06, 4.08127805e-06, 1.70087533e-06])
        female_fail_x = np.array([15.79818607, 16.09133457, 16.38448306, 16.67763156, 16.97078005, 17.26392855, 17.55707704, 17.85022554, 18.14337403, 18.43652253, 18.72967102, 19.02281952, 19.31596801, 19.60911651, 19.902265, 20.1954135, 20.48856199, 20.78171049, 21.07485898, 21.36800748, 21.66115597, 21.95430447, 22.24745296, 22.54060146, 22.83374995, 23.12689845, 23.42004694, 23.71319544, 24.00634393, 24.29949243, 24.59264092, 24.88578942, 25.17893791, 25.47208641, 25.7652349, 26.0583834, 26.35153189, 26.64468039, 26.93782888, 27.23097738, 27.52412587, 27.81727437, 28.11042286, 28.40357136, 28.69671985, 28.98986835, 29.28301684, 29.57616534, 29.86931383, 30.16246233, 30.45561082, 30.74875932, 31.04190781, 31.33505631, 31.6282048, 31.9213533, 32.21450179, 32.50765029, 32.80079878, 33.09394728, 33.38709577, 33.68024427, 33.97339276, 34.26654126, 34.55968975, 34.85283825, 35.14598674, 35.43913524, 35.73228373, 36.02543223, 36.31858072, 36.61172922, 36.90487771, 37.19802621, 37.4911747, 37.7843232, 38.07747169, 38.37062019, 38.66376868, 38.95691718, 39.25006568, 39.54321417, 39.83636267, 40.12951116, 40.42265966, 40.71580815, 41.00895665, 41.30210514, 41.59525364, 41.88840213, 42.18155063, 42.47469912, 42.76784762, 43.06099611, 43.35414461, 43.6472931, 43.9404416, 44.23359009, 44.52673859, 44.81988708, 45.11303558, 45.40618407, 45.69933257, 45.99248106, 46.28562956, 46.57877805, 46.87192655, 47.16507504, 47.45822354, 47.75137203, 48.04452053, 48.33766902, 48.63081752, 48.92396601, 49.21711451, 49.510263, 49.8034115, 50.09655999, 50.38970849, 50.68285698, 50.97600548, 51.26915397, 51.56230247, 51.85545096, 52.14859946, 52.44174795, 52.73489645, 53.02804494, 53.32119344, 53.61434193, 53.90749043, 54.20063892, 54.49378742, 54.78693591, 55.08008441, 55.3732329, 55.6663814, 55.95952989, 56.25267839, 56.54582688, 56.83897538, 57.13212387, 57.42527237, 57.71842086, 58.01156936, 58.30471785, 58.59786635, 58.89101484, 59.18416334, 59.47731183, 59.77046033, 60.06360882, 60.35675732, 60.64990581, 60.94305431, 61.2362028, 61.5293513, 61.82249979, 62.11564829, 62.40879678, 62.70194528, 62.99509377, 63.28824227, 63.58139076, 63.87453926, 64.16768775, 64.46083625, 64.75398474, 65.04713324, 65.34028173, 65.63343023, 65.92657872, 66.21972722, 66.51287571, 66.80602421, 67.0991727, 67.3923212, 67.68546969, 67.97861819, 68.27176668, 68.56491518, 68.85806367, 69.15121217, 69.44436066, 69.73750916, 70.03065765, 70.32380615, 70.61695464, 70.91010314, 71.20325163, 71.49640013, 71.78954862, 72.08269712, 72.37584561, 72.66899411, 72.9621426, 73.2552911, 73.54843959, 73.84158809, 74.13473658])
        female_fail_y = np.array([5.20668477e-07, 9.04605272e-07, 1.53244984e-06, 2.5318417e-06, 4.08047155e-06, 6.41674934e-06, 9.84839758e-06, 1.47565459e-05, 2.15925534e-05, 3.08648625e-05, 4.31138693e-05, 5.88741633e-05, 7.8625495e-05, 0.000102736238, 0.00013140552, 0.000164612089, 0.000202078829, 0.000243261223, 0.000287365874, 0.000333401524, 0.000380260412, 0.000426822989, 0.000472074831, 0.000515221727, 0.000555787998, 0.000593684229, 0.00062923363, 0.000663150791, 0.000696472101, 0.000730442886, 0.000766371935, 0.000805468769, 0.00084868247, 0.000896562217, 0.000949158653, 0.00100598125, 0.00106602012, 0.00112783193, 0.00118967962, 0.00124970728, 0.00130612508, 0.00135737767, 0.00140227293, 0.00144005518, 0.00147041774, 0.00149346053, 0.00150960735, 0.00151950277, 0.00152390895, 0.00152361942, 0.00151939986, 0.00151195877, 0.00150194383, 0.00148995557, 0.00147656768, 0.00146234471, 0.00144785033, 0.00143364302, 0.00142025992, 0.00140819196, 0.00139785515, 0.00138956319, 0.0013835054, 0.00137973331, 0.00137815698, 0.00137855136, 0.00138057172, 0.0013837769, 0.00138765857, 0.00139167479, 0.00139528552, 0.00139798774, 0.0013993472, 0.00139902408, 0.00139678989, 0.00139253407, 0.00138626011, 0.0013780723, 0.00136815576, 0.00135675287, 0.00134413959, 0.00133060419, 0.00131643012, 0.00130188324, 0.00128720291, 0.00127259575, 0.00125823076, 0.00124423511, 0.00123069037, 0.00121762982, 0.00120503767, 0.00119285119, 0.0011809665, 0.00116924811, 0.00115754148, 0.00114568746, 0.00113353721, 0.0011209659, 0.00110788428, 0.00109424718, 0.00108005865, 0.00106537336, 0.00105029435, 0.00103496664, 0.00101956713, 0.00100429097, 0.000989335817, 0.000974885887, 0.000961098317, 0.000948094217, 0.000935956201, 0.000924732795, 0.000914448544, 0.000905117224, 0.000896754692, 0.00088938787, 0.000883057157, 0.000877810987, 0.00087369292, 0.000870723274, 0.000868878503, 0.000868072217, 0.000868141835, 0.00086884433, 0.000869863446, 0.000870829123, 0.000871347876, 0.000871040739, 0.000869583574, 0.000866743503, 0.00086240536, 0.000856583493, 0.000849416854, 0.000841148432, 0.000832093035, 0.000822599409, 0.000813013157, 0.000803645919, 0.000794754101, 0.000786527832, 0.000779088597, 0.000772492732, 0.000766737801, 0.000761769784, 0.000757490234, 0.000753763704, 0.000750426259, 0.000747295583, 0.000744182348, 0.000740901468, 0.000737281138, 0.000733167488, 0.00072842338, 0.000722921166, 0.000716530729, 0.00070910548, 0.000700469769, 0.000690411259, 0.000678681204, 0.000665004324, 0.000649098467, 0.00063070252, 0.000609609563, 0.000585700968, 0.000558976537, 0.000529575734, 0.000497785873, 0.000464034725, 0.000428867214, 0.000392908413, 0.000356817409, 0.000321238254, 0.000286754809, 0.000253855541, 0.00022291239, 0.000194175143, 0.000167779933, 0.000143768114, 0.000122110478, 0.000102731661, 8.5530594e-05, 7.03945985e-05, 5.72066316e-05, 4.5846856e-05, 3.61906958e-05, 2.81058066e-05, 2.14499934e-05, 1.60713072e-05, 1.18106382e-05, 8.50634912e-06, 6.00001532e-06, 4.14219776e-06, 2.79732236e-06, 1.84705826e-06, 1.19196377e-06, 7.51499382e-07, 4.62735914e-07, 2.78193387e-07, 1.63249177e-07, 9.34839198e-08])
        fig, (ax1, ax2) = matplotlib.pyplot.subplots(1, 2, figsize=(15,6), sharey=True)

        fig, (ax_male, ax_female) = matplotlib.pyplot.subplots(1, 2, figsize=(15,6), sharey=True)
        ax_male.plot(male_ok_x, male_ok_y, label='Credit ok')
        ax_male.plot(male_fail_x, male_fail_y, label='Credit fail')
        ax_female.plot(female_ok_x, female_ok_y, label='Credit ok')
        ax_female.plot(female_fail_x, female_fail_y, label='Credit fail')

        ax_male.set_title('Male gender')
        ax_male.set_xlabel('Years birth')
        ax_male.set_ylabel('Density')
        ax_male.legend(loc='upper right')#, bbox_to_anchor=(1, 0))

        ax_female.set_title('Female gender')
        ax_female.set_xlabel('Years birth')
        ax_female.legend(loc='upper right')#, bbox_to_anchor=(1, 0))

        if CODE_GENDER == 'M':
            ax_male.axvline(DAYS_BIRTH / 365.25, 0.05, 0.95, color='tab:green')
        if CODE_GENDER == 'F':
            ax_female.axvline(DAYS_BIRTH / 365.25, 0.05, 0.95, color='tab:green')

        st.pyplot(fig)    
    if plot_choice == 'Sex-age distribution default cients':
        st.write("Distribution of ages and sexes for people who pay their credits and those who fail")
        st.write("The distribution of clients who payed their credits (blue line) and those who had difficulties (orange line): it is similar to the previous plot, but here the default and non-default clients are normalized independently, so you can see better the sex-age distribution of default clients. The height is adjusted in a way that the area under each curve equals 1.")
        # draw the graphics (age sex distribution, with the age of client indicated on it, common norm=False)
        # values are extracted from seaborn kdeplot
        male_ok_x = np.array([17.55566165, 17.83150478, 18.10734791, 18.38319105, 18.65903418, 18.93487731, 19.21072045, 19.48656358, 19.76240671, 20.03824985, 20.31409298, 20.58993611, 20.86577924, 21.14162238, 21.41746551, 21.69330864, 21.96915178, 22.24499491, 22.52083804, 22.79668118, 23.07252431, 23.34836744, 23.62421057, 23.90005371, 24.17589684, 24.45173997, 24.72758311, 25.00342624, 25.27926937, 25.55511251, 25.83095564, 26.10679877, 26.38264191, 26.65848504, 26.93432817, 27.2101713, 27.48601444, 27.76185757, 28.0377007, 28.31354384, 28.58938697, 28.8652301, 29.14107324, 29.41691637, 29.6927595, 29.96860264, 30.24444577, 30.5202889, 30.79613203, 31.07197517, 31.3478183, 31.62366143, 31.89950457, 32.1753477, 32.45119083, 32.72703397, 33.0028771, 33.27872023, 33.55456337, 33.8304065, 34.10624963, 34.38209276, 34.6579359, 34.93377903, 35.20962216, 35.4854653, 35.76130843, 36.03715156, 36.3129947, 36.58883783, 36.86468096, 37.1405241, 37.41636723, 37.69221036, 37.96805349, 38.24389663, 38.51973976, 38.79558289, 39.07142603, 39.34726916, 39.62311229, 39.89895543, 40.17479856, 40.45064169, 40.72648483, 41.00232796, 41.27817109, 41.55401422, 41.82985736, 42.10570049, 42.38154362, 42.65738676, 42.93322989, 43.20907302, 43.48491616, 43.76075929, 44.03660242, 44.31244556, 44.58828869, 44.86413182, 45.13997495, 45.41581809, 45.69166122, 45.96750435, 46.24334749, 46.51919062, 46.79503375, 47.07087689, 47.34672002, 47.62256315, 47.89840629, 48.17424942, 48.45009255, 48.72593568, 49.00177882, 49.27762195, 49.55346508, 49.82930822, 50.10515135, 50.38099448, 50.65683762, 50.93268075, 51.20852388, 51.48436702, 51.76021015, 52.03605328, 52.31189641, 52.58773955, 52.86358268, 53.13942581, 53.41526895, 53.69111208, 53.96695521, 54.24279835, 54.51864148, 54.79448461, 55.07032775, 55.34617088, 55.62201401, 55.89785714, 56.17370028, 56.44954341, 56.72538654, 57.00122968, 57.27707281, 57.55291594, 57.82875908, 58.10460221, 58.38044534, 58.65628848, 58.93213161, 59.20797474, 59.48381787, 59.75966101, 60.03550414, 60.31134727, 60.58719041, 60.86303354, 61.13887667, 61.41471981, 61.69056294, 61.96640607, 62.24224921, 62.51809234, 62.79393547, 63.0697786, 63.34562174, 63.62146487, 63.897308, 64.17315114, 64.44899427, 64.7248374, 65.00068054, 65.27652367, 65.5523668, 65.82820994, 66.10405307, 66.3798962, 66.65573933, 66.93158247, 67.2074256, 67.48326873, 67.75911187, 68.034955, 68.31079813, 68.58664127, 68.8624844, 69.13832753, 69.41417067, 69.6900138, 69.96585693, 70.24170006, 70.5175432, 70.79338633, 71.06922946, 71.3450726, 71.62091573, 71.89675886, 72.172602, 72.44844513])
        male_ok_y = np.array([4.65232456e-06, 1.01575006e-05, 2.1133468e-05, 4.19506031e-05, 7.95519137e-05, 0.000144313592, 0.000250803873, 0.000418187606, 0.000669969982, 0.00103277765, 0.00153396704, 0.00219804727, 0.00304220635, 0.00407159513, 0.00527536019, 0.00662458398, 0.00807314371, 0.00956196864, 0.0110263338, 0.0124049197, 0.0136487259, 0.0147278479, 0.0156346929, 0.0163832578, 0.0170052052, 0.0175441993, 0.0180500072, 0.0185732607, 0.0191608851, 0.01985158, 0.0206708066, 0.0216255342, 0.0227000939, 0.0238551713, 0.0250316597, 0.0261596958, 0.0271712556, 0.0280131163, 0.0286565948, 0.0291014911, 0.0293736126, 0.02951724, 0.0295850745, 0.0296282857, 0.0296885077, 0.0297926169, 0.0299503893, 0.0301548426, 0.0303850266, 0.0306109229, 0.0307997794, 0.0309227495, 0.0309604362, 0.0309061188, 0.030766094, 0.0305574266, 0.0303041099, 0.0300328788, 0.0297696731, 0.0295372154, 0.0293536417, 0.0292318317, 0.029179082, 0.0291969573, 0.0292813815, 0.0294231588, 0.0296090835, 0.0298236215, 0.0300509041, 0.0302765862, 0.0304890852, 0.0306798892, 0.0308429638, 0.0309736465, 0.0310676479, 0.0311207285, 0.0311293052, 0.0310917849, 0.0310100254, 0.0308901944, 0.0307424858, 0.0305795921, 0.0304143164, 0.0302570292, 0.0301137072, 0.0299850456, 0.0298667357, 0.0297506319, 0.0296263356, 0.0294827436, 0.0293093025, 0.0290969516, 0.0288389031, 0.0285314202, 0.0281746218, 0.0277731447, 0.027336347, 0.0268777384, 0.0264134896, 0.0259601605, 0.0255320802, 0.0251389951, 0.0247845952, 0.0244663298, 0.0241765763, 0.0239048536, 0.0236404794, 0.0233749716, 0.0231036012, 0.0228258038, 0.0225445094, 0.0222647567, 0.021992099, 0.0217312716, 0.0214854256, 0.021256021, 0.0210432844, 0.0208470153, 0.0206674689, 0.0205060409, 0.0203655376, 0.0202499001, 0.0201633742, 0.0201092278, 0.0200882375, 0.0200972644, 0.0201283157, 0.0201684837, 0.0202010192, 0.0202075131, 0.0201707942, 0.0200778604, 0.0199220734, 0.0197040442, 0.0194310295, 0.0191150872, 0.0187705353, 0.0184113393, 0.0180489683, 0.0176911007, 0.0173413935, 0.0170003544, 0.0166671215, 0.0163416613, 0.0160266337, 0.0157281216, 0.0154547034, 0.0152149494, 0.015014114, 0.0148512525, 0.0147179583, 0.0145993624, 0.014477201, 0.0143340063, 0.0141571242, 0.0139414133, 0.0136899857, 0.0134129652, 0.0131247249, 0.0128403281, 0.0125719512, 0.0123259823, 0.0121013159, 0.0118891211, 0.0116740737, 0.0114367693, 0.0111568431, 0.0108162726, 0.0104023883, 0.00991020961, 0.00934378646, 0.00871626333, 0.00804847594, 0.00736610641, 0.00669576213, 0.00606069628, 0.00547709601, 0.00495181188, 0.00448208267, 0.00405731989, 0.00366250257, 0.00328233561, 0.00290514473, 0.00252556754, 0.00214544246, 0.00177280615, 0.00141943447, 0.00109772928, 0.000817846092, 0.000585763223, 0.000402611138, 0.000265169409, 0.000167142209, 0.000100714424, 5.79571874e-05, 3.18227833e-05, 1.66578765e-05, 8.30639759e-06, 3.94276874e-06, 1.78029025e-06])
        male_fail_x = np.array([15.8862862, 16.17776506, 16.46924392, 16.76072277, 17.05220163, 17.34368049, 17.63515935, 17.92663821, 18.21811706, 18.50959592, 18.80107478, 19.09255364, 19.3840325, 19.67551135, 19.96699021, 20.25846907, 20.54994793, 20.84142679, 21.13290564, 21.4243845, 21.71586336, 22.00734222, 22.29882108, 22.59029994, 22.88177879, 23.17325765, 23.46473651, 23.75621537, 24.04769423, 24.33917308, 24.63065194, 24.9221308, 25.21360966, 25.50508852, 25.79656737, 26.08804623, 26.37952509, 26.67100395, 26.96248281, 27.25396167, 27.54544052, 27.83691938, 28.12839824, 28.4198771, 28.71135596, 29.00283481, 29.29431367, 29.58579253, 29.87727139, 30.16875025, 30.4602291, 30.75170796, 31.04318682, 31.33466568, 31.62614454, 31.91762339, 32.20910225, 32.50058111, 32.79205997, 33.08353883, 33.37501769, 33.66649654, 33.9579754, 34.24945426, 34.54093312, 34.83241198, 35.12389083, 35.41536969, 35.70684855, 35.99832741, 36.28980627, 36.58128512, 36.87276398, 37.16424284, 37.4557217, 37.74720056, 38.03867941, 38.33015827, 38.62163713, 38.91311599, 39.20459485, 39.49607371, 39.78755256, 40.07903142, 40.37051028, 40.66198914, 40.953468, 41.24494685, 41.53642571, 41.82790457, 42.11938343, 42.41086229, 42.70234114, 42.99382, 43.28529886, 43.57677772, 43.86825658, 44.15973544, 44.45121429, 44.74269315, 45.03417201, 45.32565087, 45.61712973, 45.90860858, 46.20008744, 46.4915663, 46.78304516, 47.07452402, 47.36600287, 47.65748173, 47.94896059, 48.24043945, 48.53191831, 48.82339716, 49.11487602, 49.40635488, 49.69783374, 49.9893126, 50.28079146, 50.57227031, 50.86374917, 51.15522803, 51.44670689, 51.73818575, 52.0296646, 52.32114346, 52.61262232, 52.90410118, 53.19558004, 53.48705889, 53.77853775, 54.07001661, 54.36149547, 54.65297433, 54.94445319, 55.23593204, 55.5274109, 55.81888976, 56.11036862, 56.40184748, 56.69332633, 56.98480519, 57.27628405, 57.56776291, 57.85924177, 58.15072062, 58.44219948, 58.73367834, 59.0251572, 59.31663606, 59.60811491, 59.89959377, 60.19107263, 60.48255149, 60.77403035, 61.06550921, 61.35698806, 61.64846692, 61.93994578, 62.23142464, 62.5229035, 62.81438235, 63.10586121, 63.39734007, 63.68881893, 63.98029779, 64.27177664, 64.5632555, 64.85473436, 65.14621322, 65.43769208, 65.72917093, 66.02064979, 66.31212865, 66.60360751, 66.89508637, 67.18656523, 67.47804408, 67.76952294, 68.0610018, 68.35248066, 68.64395952, 68.93543837, 69.22691723, 69.51839609, 69.80987495, 70.10135381, 70.39283266, 70.68431152, 70.97579038, 71.26726924, 71.5587481, 71.85022696, 72.14170581, 72.43318467, 72.72466353, 73.01614239, 73.30762125, 73.5991001, 73.89057896])
        male_fail_y = np.array([8.29984255e-06, 1.47809259e-05, 2.56782828e-05, 4.35273563e-05, 7.20098938e-05, 0.000116294488, 0.000183386953, 0.000282440536, 0.000424955698, 0.000624783036, 0.000897836862, 0.00126143753, 0.00173323277, 0.00232970413, 0.00306434076, 0.00394564914, 0.0049752489, 0.00614636063, 0.00744300305, 0.00884016952, 0.0103051436, 0.0117999521, 0.0132847634, 0.0147218581, 0.0160796593, 0.0173362485, 0.0184818253, 0.0195196948, 0.02046557, 0.021345219, 0.0221907407, 0.023035959, 0.0239115747, 0.0248407585, 0.0258358149, 0.026896393, 0.0280094869, 0.0291511875, 0.0302898754, 0.0313903198, 0.0324180186, 0.0333431124, 0.034143319, 0.0348055469, 0.035326108, 0.0357096951, 0.0359674834, 0.0361148086, 0.0361688658, 0.0361467852, 0.0360642915, 0.035935, 0.0357702657, 0.0355794191, 0.0353701917, 0.0351491556, 0.03492206, 0.0346940113, 0.0344695042, 0.0342523459, 0.0340455299, 0.0338511055, 0.0336700745, 0.0335023333, 0.0333466664, 0.0332008043, 0.0330615523, 0.0329249983, 0.0327867926, 0.0326424771, 0.0324878234, 0.0323191358, 0.0321334791, 0.0319288117, 0.031704026, 0.0314589174, 0.0311941097, 0.0309109567, 0.0306114299, 0.0302979864, 0.0299734095, 0.0296406232, 0.0293024934, 0.0289616446, 0.0286203238, 0.0282803335, 0.0279430364, 0.0276094103, 0.0272801201, 0.0269555719, 0.026635932, 0.0263211195, 0.0260107997, 0.0257044198, 0.0254013091, 0.0251008471, 0.0248026629, 0.0245068097, 0.0242138522, 0.0239248252, 0.023641058, 0.0233639032, 0.0230944416, 0.0228332418, 0.0225802425, 0.0223347862, 0.0220957925, 0.0218620224, 0.0216323671, 0.021406096, 0.0211830178, 0.0209635348, 0.0207485945, 0.0205395543, 0.0203379845, 0.0201454228, 0.0199631, 0.0197916491, 0.0196308248, 0.0194792688, 0.0193343686, 0.0191922564, 0.0190479803, 0.0188958535, 0.0187299494, 0.0185446798, 0.0183353671, 0.0180987234, 0.0178331628, 0.0175389067, 0.0172178823, 0.0168734478, 0.0165100029, 0.0161325512, 0.0157462734, 0.0153561557, 0.0149666967, 0.0145816982, 0.0142041305, 0.0138360622, 0.0134786382, 0.0131321008, 0.012795853, 0.0124685679, 0.0121483538, 0.0118329776, 0.0115201427, 0.0112078009, 0.0108944648, 0.0105794733, 0.0102631575, 0.00994686184, 0.00963279255, 0.00932369433, 0.00902238845, 0.00873123711, 0.0084516193, 0.00818351052, 0.0079252476, 0.00767353358, 0.00742370002, 0.00717020187, 0.0069072814, 0.00662970844, 0.00633348934, 0.0060164391, 0.00567852942, 0.00532195801, 0.00495092685, 0.00457116263, 0.00418925485, 0.00381191675, 0.00344528664, 0.00309437716, 0.00276274962, 0.00245244494, 0.00216415216, 0.00189755122, 0.00165173887, 0.00142564075, 0.00121832903, 0.00102919733, 0.000857983591, 0.000704667137, 0.000569289852, 0.000451759435, 0.000351686079, 0.000268286546, 0.000200368126, 0.000146385143, 0.000104546894, 7.29498825e-05, 4.97083732e-05, 3.30635695e-05, 2.14602297e-05, 1.35879192e-05, 8.39056303e-06, 5.05181068e-06, 2.96502978e-06, 1.69610665e-06])

        female_ok_x = np.array([17.33141439, 17.60739252, 17.88337066, 18.15934879, 18.43532693, 18.71130507, 18.9872832, 19.26326134, 19.53923947, 19.81521761, 20.09119574, 20.36717388, 20.64315202, 20.91913015, 21.19510829, 21.47108642, 21.74706456, 22.02304269, 22.29902083, 22.57499896, 22.8509771, 23.12695524, 23.40293337, 23.67891151, 23.95488964, 24.23086778, 24.50684591, 24.78282405, 25.05880218, 25.33478032, 25.61075846, 25.88673659, 26.16271473, 26.43869286, 26.714671, 26.99064913, 27.26662727, 27.5426054, 27.81858354, 28.09456168, 28.37053981, 28.64651795, 28.92249608, 29.19847422, 29.47445235, 29.75043049, 30.02640862, 30.30238676, 30.5783649, 30.85434303, 31.13032117, 31.4062993, 31.68227744, 31.95825557, 32.23423371, 32.51021184, 32.78618998, 33.06216812, 33.33814625, 33.61412439, 33.89010252, 34.16608066, 34.44205879, 34.71803693, 34.99401506, 35.2699932, 35.54597134, 35.82194947, 36.09792761, 36.37390574, 36.64988388, 36.92586201, 37.20184015, 37.47781828, 37.75379642, 38.02977456, 38.30575269, 38.58173083, 38.85770896, 39.1336871, 39.40966523, 39.68564337, 39.96162151, 40.23759964, 40.51357778, 40.78955591, 41.06553405, 41.34151218, 41.61749032, 41.89346845, 42.16944659, 42.44542473, 42.72140286, 42.997381, 43.27335913, 43.54933727, 43.8253154, 44.10129354, 44.37727167, 44.65324981, 44.92922795, 45.20520608, 45.48118422, 45.75716235, 46.03314049, 46.30911862, 46.58509676, 46.86107489, 47.13705303, 47.41303117, 47.6890093, 47.96498744, 48.24096557, 48.51694371, 48.79292184, 49.06889998, 49.34487811, 49.62085625, 49.89683439, 50.17281252, 50.44879066, 50.72476879, 51.00074693, 51.27672506, 51.5527032, 51.82868133, 52.10465947, 52.38063761, 52.65661574, 52.93259388, 53.20857201, 53.48455015, 53.76052828, 54.03650642, 54.31248455, 54.58846269, 54.86444083, 55.14041896, 55.4163971, 55.69237523, 55.96835337, 56.2443315, 56.52030964, 56.79628777, 57.07226591, 57.34824405, 57.62422218, 57.90020032, 58.17617845, 58.45215659, 58.72813472, 59.00411286, 59.28009099, 59.55606913, 59.83204727, 60.1080254, 60.38400354, 60.65998167, 60.93595981, 61.21193794, 61.48791608, 61.76389422, 62.03987235, 62.31585049, 62.59182862, 62.86780676, 63.14378489, 63.41976303, 63.69574116, 63.9717193, 64.24769744, 64.52367557, 64.79965371, 65.07563184, 65.35160998, 65.62758811, 65.90356625, 66.17954438, 66.45552252, 66.73150066, 67.00747879, 67.28345693, 67.55943506, 67.8354132, 68.11139133, 68.38736947, 68.6633476, 68.93932574, 69.21530388, 69.49128201, 69.76726015, 70.04323828, 70.31921642, 70.59519455, 70.87117269, 71.14715082, 71.42312896, 71.6991071, 71.97508523, 72.25106337])
        female_ok_y = np.array([1.23098564e-06, 3.1499355e-06, 7.56956726e-06, 1.70940064e-05, 3.63053966e-05, 7.25913876e-05, 0.000136808502, 0.000243385004, 0.000409442804, 0.000652708617, 0.000988400076, 0.00142577129, 0.00196532391, 0.0025976032, 0.0033039806, 0.00405912344, 0.00483434526, 0.0056009671, 0.00633314418, 0.00701002853, 0.00761735531, 0.00814849504, 0.00860488329, 0.00899574728, 0.00933725773, 0.00965147948, 0.00996551868, 0.0103109291, 0.0107228597, 0.0112379448, 0.011889954, 0.0127029639, 0.013683153, 0.0148117171, 0.016042077, 0.0173038726, 0.0185141484, 0.0195933671, 0.0204816962, 0.0211505249, 0.0216057338, 0.0218821759, 0.0220318142, 0.0221097497, 0.0221623838, 0.0222204616, 0.0222976091, 0.0223931441, 0.0224970601, 0.0225952222, 0.0226736011, 0.0227212376, 0.0227321207, 0.0227062036, 0.0226495711, 0.0225736419, 0.0224934147, 0.0224250869, 0.0223836681, 0.0223812555, 0.0224263908, 0.022524465, 0.022678702, 0.0228910103, 0.0231620643, 0.0234903577, 0.0238705351, 0.0242918128, 0.0247374843, 0.0251862017, 0.0256150131, 0.0260033174, 0.0263364029, 0.0266073412, 0.026816686, 0.0269703437, 0.0270766557, 0.0271438379, 0.027178466, 0.0271850294, 0.0271661286, 0.0271228994, 0.0270555691, 0.0269643055, 0.0268504309, 0.0267176871, 0.026572894, 0.0264253786, 0.0262850193, 0.0261594046, 0.0260510918, 0.0259560439, 0.0258640109, 0.0257610169, 0.0256333949, 0.0254721707, 0.025276291, 0.0250534297, 0.0248179247, 0.0245865192, 0.0243735061, 0.0241871113, 0.0240283636, 0.0238925634, 0.0237723599, 0.0236609098, 0.0235538207, 0.0234493667, 0.0233473567, 0.0232475966, 0.0231488967, 0.0230491296, 0.0229462252, 0.0228395317, 0.0227308975, 0.0226250851, 0.0225295108, 0.02245353, 0.022407473, 0.0224014895, 0.0224442232, 0.0225414966, 0.0226954094, 0.0229042529, 0.0231632902, 0.0234659251, 0.0238044642, 0.0241698676, 0.0245505251, 0.0249308154, 0.025290577, 0.0256064356, 0.0258552682, 0.0260192078, 0.0260907789, 0.0260763023, 0.0259958822, 0.0258792443, 0.0257582426, 0.0256583901, 0.0255924823, 0.0255587487, 0.0255441433, 0.0255312263, 0.0255056458, 0.025461184, 0.0254006038, 0.0253324272, 0.0252653763, 0.0252028957, 0.0251398461, 0.0250624513, 0.0249514129, 0.0247871707, 0.0245557526, 0.0242535233, 0.023889383, 0.0234835884, 0.0230633127, 0.0226561136, 0.0222832583, 0.0219549569, 0.0216688331, 0.0214116504, 0.0211630157, 0.0208991624, 0.0205953367, 0.0202265535, 0.0197678352, 0.0191956319, 0.0184914882, 0.0176474686, 0.0166712854, 0.0155885112, 0.0144400975, 0.0132752548, 0.01214158, 0.011075305, 0.0100944066, 0.00919638687, 0.008361265, 0.00755903154, 0.00675964129, 0.00594279105, 0.00510460342, 0.00425919622, 0.00343480574, 0.00266600345, 0.00198477608, 0.00141331683, 0.000960379836, 0.000621550509, 0.000382476288, 0.000223444367, 0.000123756706, 6.48997204e-05, 3.21860903e-05, 1.50784022e-05, 6.66573487e-06, 2.77794942e-06])
        female_fail_x = np.array([15.79818607, 16.09133457, 16.38448306, 16.67763156, 16.97078005, 17.26392855, 17.55707704, 17.85022554, 18.14337403, 18.43652253, 18.72967102, 19.02281952, 19.31596801, 19.60911651, 19.902265, 20.1954135, 20.48856199, 20.78171049, 21.07485898, 21.36800748, 21.66115597, 21.95430447, 22.24745296, 22.54060146, 22.83374995, 23.12689845, 23.42004694, 23.71319544, 24.00634393, 24.29949243, 24.59264092, 24.88578942, 25.17893791, 25.47208641, 25.7652349, 26.0583834, 26.35153189, 26.64468039, 26.93782888, 27.23097738, 27.52412587, 27.81727437, 28.11042286, 28.40357136, 28.69671985, 28.98986835, 29.28301684, 29.57616534, 29.86931383, 30.16246233, 30.45561082, 30.74875932, 31.04190781, 31.33505631, 31.6282048, 31.9213533, 32.21450179, 32.50765029, 32.80079878, 33.09394728, 33.38709577, 33.68024427, 33.97339276, 34.26654126, 34.55968975, 34.85283825, 35.14598674, 35.43913524, 35.73228373, 36.02543223, 36.31858072, 36.61172922, 36.90487771, 37.19802621, 37.4911747, 37.7843232, 38.07747169, 38.37062019, 38.66376868, 38.95691718, 39.25006568, 39.54321417, 39.83636267, 40.12951116, 40.42265966, 40.71580815, 41.00895665, 41.30210514, 41.59525364, 41.88840213, 42.18155063, 42.47469912, 42.76784762, 43.06099611, 43.35414461, 43.6472931, 43.9404416, 44.23359009, 44.52673859, 44.81988708, 45.11303558, 45.40618407, 45.69933257, 45.99248106, 46.28562956, 46.57877805, 46.87192655, 47.16507504, 47.45822354, 47.75137203, 48.04452053, 48.33766902, 48.63081752, 48.92396601, 49.21711451, 49.510263, 49.8034115, 50.09655999, 50.38970849, 50.68285698, 50.97600548, 51.26915397, 51.56230247, 51.85545096, 52.14859946, 52.44174795, 52.73489645, 53.02804494, 53.32119344, 53.61434193, 53.90749043, 54.20063892, 54.49378742, 54.78693591, 55.08008441, 55.3732329, 55.6663814, 55.95952989, 56.25267839, 56.54582688, 56.83897538, 57.13212387, 57.42527237, 57.71842086, 58.01156936, 58.30471785, 58.59786635, 58.89101484, 59.18416334, 59.47731183, 59.77046033, 60.06360882, 60.35675732, 60.64990581, 60.94305431, 61.2362028, 61.5293513, 61.82249979, 62.11564829, 62.40879678, 62.70194528, 62.99509377, 63.28824227, 63.58139076, 63.87453926, 64.16768775, 64.46083625, 64.75398474, 65.04713324, 65.34028173, 65.63343023, 65.92657872, 66.21972722, 66.51287571, 66.80602421, 67.0991727, 67.3923212, 67.68546969, 67.97861819, 68.27176668, 68.56491518, 68.85806367, 69.15121217, 69.44436066, 69.73750916, 70.03065765, 70.32380615, 70.61695464, 70.91010314, 71.20325163, 71.49640013, 71.78954862, 72.08269712, 72.37584561, 72.66899411, 72.9621426, 73.2552911, 73.54843959, 73.84158809, 74.13473658])
        female_fail_y = np.array([1.12993143e-05, 1.96313389e-05, 3.32565407e-05, 5.49448958e-05, 8.85525678e-05, 0.000139253423, 0.000213725518, 0.000320239958, 0.000468591934, 0.000669815437, 0.000935637902, 0.00127766075, 0.00170629531, 0.00222953587, 0.00285170379, 0.00357233791, 0.00438542433, 0.00527914621, 0.00623628561, 0.00723533071, 0.00825224132, 0.00926272153, 0.0102447568, 0.0111811114, 0.0120614625, 0.0128838695, 0.0136553467, 0.0143914018, 0.0151145259, 0.0158517447, 0.0166314608, 0.0174799228, 0.0184177273, 0.0194567921, 0.0205982164, 0.0218313549, 0.0231342918, 0.0244757039, 0.0258178947, 0.0271205883, 0.028344942, 0.0294572028, 0.0304314997, 0.0312514332, 0.0319103479, 0.0324104121, 0.0327608233, 0.0329755692, 0.0330711902, 0.033064907, 0.032973336, 0.0328118526, 0.032594513, 0.0323343491, 0.032043811, 0.0317351507, 0.0314206001, 0.0311122794, 0.0308218454, 0.0305599518, 0.0303356271, 0.0301556785, 0.0300242151, 0.0299423549, 0.0299081463, 0.0299167049, 0.0299605499, 0.0300301071, 0.0301143454, 0.0302015036, 0.0302798622, 0.0303385044, 0.0303680068, 0.0303609947, 0.0303125092, 0.0302201513, 0.0300839966, 0.0299063085, 0.0296911041, 0.0294436437, 0.0291699159, 0.0288761769, 0.0285685775, 0.0282528875, 0.0279343016, 0.0276173036, 0.0273055611, 0.0270018336, 0.0267078917, 0.0264244576, 0.0261511885, 0.0258867228, 0.0256288065, 0.0253744993, 0.0251204472, 0.0248631968, 0.0245995174, 0.0243267004, 0.0240428089, 0.0237468628, 0.0234389495, 0.0231202561, 0.022793018, 0.022460383, 0.0221261898, 0.0217946734, 0.0214701232, 0.0211565373, 0.0208573257, 0.0205751165, 0.0203117027, 0.0200681374, 0.0198449532, 0.019642449, 0.0194609691, 0.0193010976, 0.0191637113, 0.0190498613, 0.0189604928, 0.0188960469, 0.0188560125, 0.0188385149, 0.0188400257, 0.0188552709, 0.0188773873, 0.018898344, 0.0189096017, 0.0189029364, 0.0188713137, 0.0188096797, 0.0187155353, 0.0185891917, 0.0184336645, 0.0182542269, 0.0180577107, 0.0178516843, 0.0176436478, 0.0174403642, 0.0172473979, 0.0170688751, 0.0169074322, 0.0167642916, 0.0166394007, 0.016531587, 0.0164387141, 0.0163578426, 0.0162854149, 0.0162174744, 0.0161499124, 0.0160787122, 0.0160001454, 0.0159108728, 0.0158079183, 0.0156885117, 0.0155498293, 0.0153886899, 0.0152012815, 0.0149829962, 0.0147284358, 0.0144316263, 0.0140864445, 0.0136872239, 0.013229474, 0.0127106203, 0.0121306587, 0.0114926156, 0.0108027263, 0.010070274, 0.00930708439, 0.00852672259, 0.00774349177, 0.00697136885, 0.00622302455, 0.00550905937, 0.00483754494, 0.00421390207, 0.00364108503, 0.00311999128, 0.00264998696, 0.00222943654, 0.00185614668, 0.00152767208, 0.00124147272, 0.000994947956, 0.000785394287, 0.000609939639, 0.000465498159, 0.000348772318, 0.000256309185, 0.000184600983, 0.000130209648, 8.98921225e-05, 6.07062382e-05, 4.0084032e-05, 2.58674644e-05, 1.63087033e-05, 1.00420878e-05, 6.03722841e-06, 3.54276059e-06, 2.0287462e-06])
        fig, (ax1, ax2) = matplotlib.pyplot.subplots(1, 2, figsize=(15,6), sharey=True)

        fig, (ax_male, ax_female) = matplotlib.pyplot.subplots(1, 2, figsize=(15,6), sharey=True)
        ax_male.plot(male_ok_x, male_ok_y, label='Credit ok')
        ax_male.plot(male_fail_x, male_fail_y, label='Credit fail')
        ax_female.plot(female_ok_x, female_ok_y, label='Credit ok')
        ax_female.plot(female_fail_x, female_fail_y, label='Credit fail')

        ax_male.set_title('Male gender')
        ax_male.set_xlabel('Years birth')
        ax_male.set_ylabel('Density')
#        ax = matplotlib.pyplot.gca() #gca means "get current axes"
#        ax.legend(loc='top right')
        ax_male.legend(loc='upper right')#, bbox_to_anchor=(1, 0))

        ax_female.set_title('Female gender')
        ax_female.set_xlabel('Years birth')
#        ax = matplotlib.pyplot.gca() #gca means "get current axes"
#        ax.legend(loc='top right')
        ax_female.legend(loc='upper right')#, bbox_to_anchor=(1, 0))

        if CODE_GENDER == 'M':
            ax_male.axvline(DAYS_BIRTH / 365.25, 0.05, 0.95, color='tab:green')
        if CODE_GENDER == 'F':
            ax_female.axvline(DAYS_BIRTH / 365.25, 0.05, 0.95, color='tab:green')

        st.pyplot(fig)
        
    if plot_choice == 'Employed vs credit amount scatterplot':
        st.write("Employed represents proportion of client's life that he spent on his last/current job. It is its ratio to client's age in days")
        # fraction 0.002, 565 clients
        employed_ok = np.array([0.00410821, 0.10219672, 0.0326095, 0.08328793, 0.20791649, 0.12535529, 0.20249653, 0.08177259, 0.10312335, 0.10376166, 0.11407927, 0.21670702, 0.1235256, 0.037652, 0.39739035, 0.11612753, 0.23418512, 0.15468019, 0.25897627, 0.0409851, 0.14321805, 0.03775856, 0.48428023, 0.10339284, 0.01966374, 0.05757136, 0.18372333, 0.41725719, 0.12614195, 0.04416842, 0.0865789, 0.14690387, 0.10050012, 0.19201463, 0.20599391, 0.07366424, 0.34190429, 0.04845928, 0.06879423, 0.07263947, 0.06767402, 0.05593176, 0.11141486, 0.1984644, 0.01399374, 0.08268971, 0.11831938, 0.05111311, 0.10737235, 0.05483651, 0.20131499, 0.10284005, 0.04160228, 0.21526355, 0.16263228, 0.19659945, 0.11657719, 0.1549486, 0.00427195, 0.14826731, 0.11313772, 0.00780347, 0.20895615, 0.2015169, 0.11509213, 0.04707648, 0.10594631, 0.2211843, 0.13332758, 0.01760253, 0.14667821, 0.09833722, 0.35156417, 0.09994005, 0.06446428, 0.21510851, 0.05375803, 0.05554896, 0.33427566, 0.29086504, 0.06335505, 0.15413209, 0.15483609, 0.03255657, 0.1506496, 0.22383105, 0.0796742, 0.1946711, 0.08689537, 0.09419913, 0.20114473, 0.10046625, 0.49978654, 0.11865924, 0.14051111, 0.01178358, 0.34272233, 0.07049171, 0.1503268, 0.20938203, 0.107242, 0.10847102, 0.09013668, 0.26664769, 0.13818847, 0.05526919, 0.04969245, 0.10318541, 0.20954693, 0.52033032, 0.33084341, 0.36379685, 0.13727706, 0.06932257, 0.05117707, 0.18627132, 0.27867452, 0.30843885, 0.15012292, 0.02295156, 0.0117133, 0.49411677, 0.43570436, 0.14666514, 0.10041214, 0.10286666, 0.05367166, 0.07176582, 0.30772637, 0.43422634, 0.10625977, 0.10176505, 0.00460173, 0.18582363, 0.10556649, 0.08080299, 0.20165508, 0.05581422, 0.03981451, 0.3611995, 0.0870283, 0.38863175, 0.51386085, 0.24783439, 0.48319897, 0.08115152, 0.03659083, 0.10790668, 0.2745895, 0.04209257, 0.10579124, 0.12049352, 0.31644778, 0.27638681, 0.32824128, 0.12472068, 0.04562323, 0.38836265, 0.63776635, 0.07765927, 0.14155514, 0.01707176, 0.130963, 0.10357242, 0.10938133, 0.01973006, 0.32680516, 0.34029296, 0.1671937, 0.45516322, 0.28650636, 0.05876541, 0.03677491, 0.2240744, 0.07282009, 0.11315382, 0.24961588, 0.10183022, 0.31239183, 0.39824833, 0.19983568, 0.1129716, 0.25568726, 0.09944835, 0.05331578, 0.41720832, 0.09705825, 0.35671445, 0.02294411, 0.09732604, 0.12529124, 0.11682271, 0.1050504, 0.03787327, 0.14244069, 0.01556709, 0.09876961, 0.10220986, 0.2531051, 0.07401025, 0.08107957, 0.33372751, 0.62776997, 0.14062613, 0.02930271, 0.01971888, 0.10171732, 0.11322902, 0.10728059, 0.02686605, 0.05830279, 0.1133959, 0.10418316, 0.11808354, 0.15762554, 0.12943392, 0.09281086, 0.20633521, 0.0706476, 0.06996307, 0.00629747, 0.22781141, 0.07915766, 0.07051329, 0.1571098, 0.27520142, 0.01318382, 0.24492314, 0.25927762, 0.03289094, 0.35806359, 0.00585783, 0.11676552, 0.36913319, 0.1301501, 0.16293568, 0.33344376, 0.10658223, 0.08055358, 0.09937377, 0.10765343, 0.10574018, 0.12519515, 0.29871769, 0.27807518, 0.04377864, 0.14329685, 0.19909949, 0.18062304, 0.15105657, 0.12547579, 0.15236709, 0.02445101, 0.11451195, 0.11094843, 0.06760003, 0.10489794, 0.10634809, 0.17472335, 0.02889952, 0.13918754, 0.02304403, 0.10398332, 0.24475292, 0.1036221, 0.0689344, 0.09952364, 0.00673981, 0.12915129, 0.14466714, 0.28369252, 0.19771022, 0.1065355, 0.09976866, 0.16251783, 0.12350401, 0.34428384, 0.37400739, 0.21917161, 0.19164136, 0.28835337, 0.28859634, 0.0649685, 0.12488752, 0.11574487, 0.09545194, 0.12841366, 0.17649063, 0.0350677, 0.10349602, 0.10242933, 0.33413346, 0.0182945, 0.00961465, 0.10561251, 0.12190694, 0.21398632, 0.43642335, 0.04414808, 0.31115142, 0.22225237, 0.11396295, 0.01415929, 0.16589294, 0.03858521, 0.31341658, 0.07980917, 0.45603668, 0.11875376, 0.08853971, 0.0394727, 0.29229508, 0.11267274, 0.10351848, 0.00402685, 0.03432747, 0.11292346, 0.04785464, 0.01294219, 0.20343082, 0.0351215, 0.14806435, 0.23618534, 0.23484766, 0.11431596, 0.13617435, 0.51308792, 0.19796425, 0.06430205, 0.04587772, 0.11724191, 0.28293568, 0.17272206, 0.27409854, 0.17970158, 0.02034236, 0.22619231, 0.00647904, 0.05304797, 0.11984511, 0.09958008, 0.16953754, 0.19627518, 0.03511368, 0.11295555, 0.10293325, 0.05509779, 0.10881247, 0.09424338, 0.03820319, 0.3323163, 0.28370413, 0.2143651, 0.41412735, 0.12004476, 0.18678145, 0.19746048, 0.25982143, 0.12596616, 0.12371733, 0.11741952, 0.11782687, 0.02118535, 0.10739169, 0.06208426, 0.05590493, 0.02430264, 0.11844359, 0.0695599, 0.08375985, 0.19800556, 0.10151817, 0.03607849, 0.115727, 0.20521085, 0.10025804, 0.65712188, 0.46484743, 0.08506448, 0.11221158, 0.11527012, 0.15528875, 0.53323194, 0.12052067, 0.59541512, 0.10040704, 0.07536022, 0.286664, 0.46076411, 0.44413111, 0.0829929, 0.27884359, 0.018233, 0.07600673, 0.15175593, 0.06283237, 0.15349465, 0.37238765, 0.02318067, 0.20897436, 0.11593663, 0.18641892, 0.10059761, 0.11532585, 0.10671421, 0.03271962, 0.31877729, 0.32392258, 0.21183752, 0.15302299, 0.49182068, 0.11018475, 0.34960576, 0.34662228, 0.13123353, 0.27776892, 0.09708439, 0.11508103, 0.21986136, 0.0058128, 0.23267854, 0.09127875, 0.03123684, 0.17753699, 0.17643848, 0.14083761, 0.00543924, 0.18830478, 0.39552784, 0.23812254, 0.27046744, 0.13569831, 0.26617039, 0.1129502, 0.10977399, 0.20088223, 0.33416202, 0.09210425, 0.10630044, 0.11143524, 0.03391003, 0.11577712, 0.53225479, 0.09675319, 0.22186881, 0.04297779, 0.12814535, 0.03237835, 0.10589457, 0.01043867, 0.01942601, 0.26918067, 0.22031783, 0.11068071, 0.02239655, 0.1985839, 0.07080205, 0.03622296, 0.05557153, 0.09777266, 0.14245293, 0.03091781, 0.21546961, 0.10600281, 0.35095986, 0.25635771, 0.08939671, 0.22565923, 0.49366761, 0.14333105, 0.10524973, 0.31646858, 0.01594203, 0.34041556, 0.18491303, 0.12523835, 0.28636171, 0.12405957, 0.02352333, 0.10533995, 0.14943572, 0.11316992, 0.09997591, 0.04706799, 0.09465612, 0.25681928, 0.18622636, 0.14699037, 0.05266368, 0.17290649, 0.06962836, 0.57582145, 0.07807218, 0.00983607, 0.02861597, 0.1031157, 0.13477056, 0.0343907, 0.07263142, 0.10212671, 0.10981443, 0.11455044, 0.20844598, 0.03290562, 0.00710192, 0.20148193, 0.06855314, 0.55412653, 0.21259843, 0.11500334, 0.10687679, 0.12524726, 0.08828756, 0.01179171, 0.55068388, 0.1728581, 0.10815623, 0.04393939, 0.36455108, 0.11709226, 0.3792382, 0.10265416, 0.00975534, 0.11900469, 0.105352, 0.22361729, 0.12810387, 0.11747168, 0.03329837, 0.24574987, 0.25950272, 0.14070786, 0.10117367, 0.05836603, 0.14681573, 0.19066417, 0.03462552, 0.42156026, 0.14100209, 0.17570101, 0.274232, 0.08379679, 0.00691389, 0.39542061, 0.11803829, 0.1272981, 0.2259986, 0.01702501, 0.11353084, 0.04165404, 0.13240341, 0.02002861, 0.06060606, 0.52791963, 0.02617373, 0.17016486, 0.12556009, 0.23450744, 0.0942951, 0.43693841, 0.08484977, 0.38596075, 0.06202004, 0.09956638, 0.08738748])
        credit_ok = np.array([12.24195124, 13.89080354, 11.63700861, 13.02695319, 12.60656541, 13.60478953, 13.83994948, 12.50617724, 13.14803112, 12.21849517, 13.20760669, 13.93329359, 12.10071213, 13.64234218, 13.10325395, 13.93329359, 12.99920542, 14.13840025, 12.55813698, 11.58821845, 11.81303006, 13.27936713, 13.17804971, 12.38776901, 11.87694338, 13.25935278, 13.42911251, 11.97831848, 13.21856316, 12.92093239, 13.82240672, 12.50617724, 11.93701604, 13.08465216, 13.02330297, 13.56950771, 13.25599614, 12.21849517, 12.38776901, 11.53155093, 13.46615944, 13.20861447, 14.25119444, 14.38202251, 12.50450918, 13.8945195, 12.20146203, 13.02695319, 12.68660812, 13.60976601, 13.93282949, 11.47147828, 13.10317138, 13.92332406, 12.24775187, 13.42246797, 13.75736754, 13.11231304, 12.50617724, 12.50617724, 13.60478953, 13.48700649, 13.78637007, 12.73654794, 13.58969845, 13.20760669, 13.14906568, 12.50617724, 13.15881488, 10.86145751, 13.49379589, 11.6307085, 13.01700286, 13.1640426, 12.79385931, 12.10071213, 14.36028533, 13.05868209, 13.53293542, 13.42246797, 13.17398952, 12.48251618, 12.79385931, 12.50617724, 12.22469811, 13.58969845, 13.44096255, 12.79385931, 13.498688, 13.498688, 14.11561515, 11.96718074, 13.95923421, 13.60976601, 13.48700649, 13.82240672, 13.71513758, 11.99368356, 13.36934845, 12.21849517, 12.41916586, 12.72932079, 12.21849517, 13.42246797, 13.42246797, 14.47733269, 12.55813698, 12.57346198, 12.21849517, 14.11561515, 13.56950771, 13.42911251, 13.75607897, 13.22721516, 12.66032792, 13.01700286, 12.55813698, 13.92332406, 13.54137038, 13.498688, 12.80736766, 13.35239594, 13.81823285, 12.45488394, 13.63564199, 12.50617724, 11.81303006, 13.18753014, 13.13921164, 12.50617724, 13.01700286, 13.17398952, 12.97749251, 14.25119444, 13.42246797, 13.42246797, 12.52270654, 12.10071213, 13.42246797, 11.93701604, 12.78138179, 13.93728561, 12.95512746, 12.98547091, 13.33222957, 11.81303006, 11.64184625, 13.57614997, 13.32176327, 12.10071213, 13.54763111, 13.53472465, 12.08010118, 12.69778884, 14.04054312, 13.68483223, 13.71015004, 12.60656541, 12.14783424, 12.10071213, 13.42246797, 12.79309652, 13.57661865, 13.20861447, 12.98547091, 14.35008894, 13.19765636, 12.91164235, 12.32385568, 14.0863511, 13.17400661, 14.02387625, 13.8924716, 11.90743073, 12.28303369, 13.22230825, 13.57614997, 13.23211424, 13.20861447, 12.91164235, 12.44784166, 13.20621727, 13.498688, 12.31289584, 13.80589649, 12.22469811, 12.47227569, 14.62644077, 13.01700286, 12.38776901, 13.55452494, 13.19932442, 13.78711108, 12.5066438, 14.25119444, 13.40888277, 12.65746669, 12.21849517, 12.78952493, 12.96657235, 13.92526142, 13.01556182, 13.25935278, 13.71015004, 13.15881488, 12.10071213, 13.60312147, 13.5124671, 12.10071213, 14.40462135, 13.10317138, 13.24644653, 12.38212459, 14.01682559, 13.93329359, 14.31173003, 13.48681272, 12.04941884, 13.06972813, 13.13358518, 13.60312147, 11.99368356, 12.50450918, 12.73057334, 11.24504602, 12.50611057, 13.42246797, 13.1640426, 13.93329359, 11.96718074, 12.50617724, 12.32385568, 12.99242324, 13.82347873, 12.50450918, 12.55813698, 13.43667326, 12.38776901, 11.35416417, 12.32385568, 13.8924716, 13.83408743, 13.63564199, 13.89080354, 13.01700286, 13.82240672, 12.10071213, 13.60478953, 11.80795051, 13.5825212, 12.65732341, 11.40756495, 13.27554444, 14.06486557, 13.20861447, 13.09322289, 13.42640687, 13.34636416, 14.51555391, 12.99393892, 11.67131287, 13.37041649, 12.96539373, 12.8614245, 13.06579303, 14.25119444, 13.1640426, 11.96718074, 13.98017718, 13.866752, 13.54137038, 12.22469811, 12.04731135, 11.96718074, 13.43773746, 13.42246797, 11.1837962, 13.20861447, 13.38751759, 13.71015004, 13.71513758, 14.29959644, 13.27936713, 12.74781537, 13.53472465, 10.77833109, 13.57614997, 13.71015004, 12.61077746, 13.62615955, 13.19932442, 14.04318782, 13.38751759, 13.60312147, 13.93329359, 13.2746174, 13.54831323, 14.11561515, 12.65321698, 13.11140354, 14.09258873, 11.02072531, 12.10071213, 11.81303006, 12.77079537, 13.20861447, 13.02695319, 12.57266698, 13.57394651, 11.62073897, 12.10071213, 14.29544472, 12.20340409, 13.58505723, 12.72932079, 12.10071213, 13.59149037, 13.1640426, 12.32385568, 12.10071213, 14.24664341, 13.42246797, 14.0224796, 14.3819178, 13.11274931, 13.46168868, 11.1837962, 12.16462546, 13.42246797, 12.10071213, 13.44922025, 12.76071609, 11.84388252, 13.26939449, 12.85448393, 13.42246797, 14.14193246, 11.81303006, 13.53472465, 13.11231304, 13.09229585, 14.11561515, 13.79866903, 13.75607897, 12.98547091, 12.65321698, 13.3954393, 12.39511531, 13.06906386, 14.04376105, 13.8206175, 12.92278009, 12.74658425, 13.42246797, 12.08899374, 12.60656541, 13.84473775, 13.93329359, 12.6966874, 13.29220741, 14.08714709, 12.32385568, 13.1640426, 13.93329359, 11.93701604, 12.09116672, 12.89173438, 13.46002063, 12.10071213, 13.02695319, 12.42424386, 13.29483912, 12.74781537, 12.50617724, 13.93329359, 12.72932079, 14.10037291, 13.8924716, 11.93701604, 12.8614245, 13.42246797, 13.24013041, 13.01700286, 13.01700286, 12.44784166, 12.88960122, 14.00361039, 13.78637007, 13.02695319, 13.86553282, 13.93329359, 12.43718437, 12.66032792, 13.82240672, 13.28844884, 13.97992524, 13.18384692, 12.83067328, 13.01700286, 13.48693149, 13.82240672, 13.53472465, 13.41276774, 13.60312147, 12.50450918, 12.8614245, 13.15881488, 12.10071213, 13.89080354, 13.42246797, 12.50617724, 14.11561515, 13.93329359, 13.92332406, 14.40329722, 11.87694338, 12.32385568, 13.28625871, 13.71015004, 13.65544567, 12.44784166, 12.97618087, 13.93329359, 13.13921164, 14.37001445, 12.69778884, 12.98547091, 11.75469448, 13.71015004, 13.58083831, 12.70188107, 12.50617724, 14.47473145, 12.10071213, 13.53579666, 12.36446005, 13.5341286, 14.06887289, 13.89080354, 13.99997232, 12.32385568, 13.98922014, 12.72932079, 12.65746669, 14.04376105, 14.31904567, 14.01863424, 12.82154743, 12.03232622, 12.44784166, 10.86145751, 12.07764819, 13.1640426, 12.21117958, 11.6307085, 12.41916586, 11.90973321, 13.93329359, 12.55813698, 14.06887289, 13.71015004, 13.55932715, 12.7020044, 11.54732689, 13.19359973, 12.10071213, 13.77111343, 14.0817136, 13.75607897, 14.25119444, 13.11231304, 12.73654794, 14.1407792, 13.3115811, 11.9600698, 13.07302396, 13.40888277, 11.72510918, 13.19692153, 12.38776901, 13.98535459, 14.23120022, 13.11739104, 11.81303006, 13.19692153, 14.06432186, 13.20762322, 12.50617724, 12.65746669, 14.04717927, 12.72932079, 13.29220741, 14.10219213, 12.90654046, 12.65746669, 14.08867552, 13.14098884, 11.99368356, 13.92039476, 13.75894021, 14.04555028, 13.22721516, 11.53155093, 13.46573178, 12.91164235, 13.93840053, 13.11231304, 12.31388615, 13.20861447, 13.19359973, 13.64646982, 12.50450918, 12.60148742, 11.96718074, 13.498688, 13.75531459, 13.17398952, 12.7020044, 13.25973725, 13.12734495, 13.10325395, 11.81303006, 12.72932079, 13.9351359, 11.1837962, 13.7290503, 12.78138179, 13.8206175, 13.92332406, 11.93701604, 12.50617724, 12.10071213, 13.73998065, 13.1640426, 12.21849517, 12.41916586, 13.60312147, 12.41825636, 13.71015004, 13.0126735, 13.78637007, 13.53472465, 12.10071213, 13.53472465, 11.64184625, 11.87694338, 13.02695319, 13.01700286, 13.44922025, 12.33499343, 11.42569952, 12.21849517, 13.12522927, 13.63591129, 13.18853307, 14.26403516, 13.79852715, 12.40900533, 12.55813698, 13.63131244, 13.88899055, 13.27936713, 12.72932079, 12.52916107, 13.65544567])
        # fraction 0.02, 496 clients
        employed_fail = np.array([0.02581284, 0.08957469, 0.04685763, 0.30540517, 0.03761322, 0.1340983, 0.11698888, 0.14721574, 0.11296249, 0.1176061, 0.1369211, 0.09047071, 0.09319287, 0.09229865, 0.15274773, 0.06692389, 0.09196526, 0.10289773, 0.08199454, 0.09108325, 0.0295136, 0.07048458, 0.04734725, 0.17449405, 0.53406622, 0.11373656, 0.18607346, 0.29320028, 0.05151041, 0.08743474, 0.10749817, 0.00969883, 0.15577342, 0.10582879, 0.24700569, 0.0674199, 0.05073095, 0.11884252, 0.0119223, 0.12291697, 0.25520226, 0.05126872, 0.30508753, 0.04471898, 0.16885506, 0.11644629, 0.01926497, 0.16914822, 0.02507709, 0.27746291, 0.02017024, 0.1050504, 0.09334397, 0.30870504, 0.07343494, 0.20033927, 0.03430952, 0.10609083, 0.09891427, 0.02575711, 0.00742521, 0.09504883, 0.07494577, 0.03801113, 0.06822206, 0.02513234, 0.12204639, 0.02089382, 0.01852933, 0.11356327, 0.06960951, 0.06104891, 0.1094265, 0.10572507, 0.12716825, 0.02544116, 0.0435442, 0.09198564, 0.05072031, 0.09529649, 0.14448935, 0.03791301, 0.20167696, 0.01447326, 0.4059537, 0.23796909, 0.04586264, 0.10705908, 0.50060569, 0.01231455, 0.25812412, 0.23471302, 0.16499875, 0.01129974, 0.09785495, 0.10149657, 0.07422393, 0.10543583, 0.14434269, 0.02804149, 0.10572507, 0.10892179, 0.19822822, 0.01823819, 0.42557173, 0.02473476, 0.14062669, 0.17299678, 0.14442448, 0.06314751, 0.09395098, 0.28302738, 0.22238039, 0.33438202, 0.08272383, 0.03762023, 0.15624154, 0.24897912, 0.11524227, 0.29617754, 0.11711526, 0.01907459, 0.12606421, 0.0105445, 0.17092729, 0.14105903, 0.14504184, 0.09835025, 0.14185215, 0.11204817, 0.03725023, 0.08160181, 0.16885653, 0.1330973, 0.36008475, 0.14576602, 0.09682428, 0.02739271, 0.03920183, 0.07421875, 0.26022268, 0.08682188, 0.10700625, 0.00795117, 0.10783718, 0.18513211, 0.26731901, 0.32558805, 0.05802417, 0.21130952, 0.01190258, 0.35756914, 0.11589549, 0.42683618, 0.2983884, 0.05046609, 0.00865438, 0.13191153, 0.0798276, 0.06416477, 0.15772172, 0.03297355, 0.10343319, 0.09273245, 0.20307068, 0.0346392, 0.02072789, 0.19102053, 0.11550457, 0.03106946, 0.09506065, 0.03325231, 0.0827379, 0.06215654, 0.01925977, 0.02430953, 0.03384968, 0.02561118, 0.07958697, 0.10381151, 0.11824598, 0.1038249, 0.0337799, 0.13227425, 0.03933818, 0.4338919, 0.02355576, 0.02738788, 0.11851773, 0.1395853, 0.05016662, 0.17862203, 0.02075297, 0.10094246, 0.27729168, 0.14476561, 0.00654731, 0.06354655, 0.19336373, 0.41517241, 0.12564765, 0.02144798, 0.11601582, 0.02741764, 0.026143, 0.26731458, 0.34445261, 0.16204624, 0.16775021, 0.10476776, 0.06274427, 0.05211416, 0.0589815, 0.11170707, 0.01783011, 0.01202355, 0.25397412, 0.23465224, 0.04489188, 0.06027037, 0.12889712, 0.08968775, 0.11057296, 0.28300836, 0.02937726, 0.10159167, 0.22336946, 0.39616253, 0.23663961, 0.20379084, 0.00531632, 0.04148804, 0.11009829, 0.12529782, 0.27124032, 0.06824653, 0.270113, 0.05208808, 0.02234637, 0.07046367, 0.10097237, 0.0743865, 0.17567696, 0.08157444, 0.01898734, 0.01599327, 0.04639292, 0.08312177, 0.01684933, 0.10834784, 0.16071064, 0.09795759, 0.10392974, 0.01974192, 0.05423903, 0.05215956, 0.09791238, 0.49805764, 0.11414048, 0.08428993, 0.09933653, 0.01296868, 0.02852984, 0.02050309, 0.24020201, 0.00707382, 0.10799952, 0.2492905, 0.06252354, 0.01687149, 0.16961709, 0.16126825, 0.21377556, 0.04314612, 0.01033755, 0.07976299, 0.08491556, 0.06481481, 0.02733289, 0.10376618, 0.34261278, 0.20011374, 0.05381396, 0.01951592, 0.03198834, 0.12471811, 0.06572082, 0.03656402, 0.09956479, 0.08887531, 0.56633019, 0.00772706, 0.09182423, 0.03435728, 0.24867866, 0.29275544, 0.0417159, 0.09027829, 0.15123882, 0.09950644, 0.0489502, 0.18068025, 0.16898544, 0.08505316, 0.0727534, 0.02413002, 0.09943392, 0.05707912, 0.24158034, 0.11331051, 0.04357322, 0.20047093, 0.03352821, 0.05910871, 0.01549071, 0.24164934, 0.05074862, 0.11689849, 0.02946742, 0.10204369, 0.05138297, 0.142303, 0.10596514, 0.26483489, 0.08158016, 0.13071629, 0.21100593, 0.05433503, 0.18716073, 0.13005714, 0.09892863, 0.11404109, 0.05222415, 0.01010338, 0.02101079, 0.36965626, 0.03565551, 0.10502522, 0.12045701, 0.02944444, 0.30389811, 0.0295922, 0.04907532, 0.16260944, 0.15111311, 0.15655563, 0.29275474, 0.05306172, 0.09036251, 0.3422125, 0.11666843, 0.00617284, 0.03486506, 0.21234423, 0.17970858, 0.19696822, 0.11367151, 0.00940024, 0.03063998, 0.01989189, 0.11097811, 0.06785149, 0.14430621, 0.09648353, 0.20370164, 0.27752893, 0.07824989, 0.1203098, 0.13325472, 0.30284801, 0.04783818, 0.03259818, 0.10721308, 0.1061638, 0.19376187, 0.03608168, 0.11009321, 0.23761493, 0.15925035, 0.04511208, 0.12359031, 0.26053499, 0.0145808, 0.09069012, 0.53241743, 0.0645712, 0.08307065, 0.10884072, 0.13099445, 0.00577307, 0.06299393, 0.10257948, 0.08791005, 0.15486839, 0.16283166, 0.07546786, 0.04958251, 0.24335421, 0.14263, 0.27262333, 0.11195903, 0.11873793, 0.20850958, 0.11733919, 0.2000556, 0.02149784, 0.10622943, 0.13266134, 0.09345324, 0.2003815, 0.06869221, 0.18564619, 0.07011374, 0.4269627, 0.08179942, 0.12796591, 0.24115456, 0.01981474, 0.3025039, 0.01566618, 0.10973258, 0.00880519, 0.0296395, 0.14241683, 0.0691501, 0.08443629, 0.04728839, 0.20985231, 0.02003854, 0.15646824, 0.08777559, 0.10400599, 0.11005064, 0.07047054, 0.20877042, 0.04039317, 0.02931149, 0.10667126, 0.11419396, 0.04011709, 0.19393794, 0.01141805, 0.18220445, 0.20689333, 0.06245214, 0.01393215, 0.10344665, 0.06632774, 0.53472729, 0.04551551, 0.0153834, 0.0961103, 0.30663864, 0.1089434, 0.10294658, 0.1112849, 0.20278076, 0.08438212, 0.13991724, 0.35164938, 0.01166798, 0.06807525, 0.11047054, 0.0482282, 0.13687935, 0.01543636, 0.07531267, 0.11734895, 0.15197433, 0.2302979, 0.02906649, 0.34903304, 0.08156579, 0.12896041, 0.15554187, 0.16593637, 0.11286726, 0.00817871, 0.02322731, 0.0174703, 0.11035673, 0.1441284, 0.18520911, 0.10942148, 0.05661605, 0.39020135, 0.06817802, 0.32755604, 0.06470631, 0.0150153, 0.04327666, 0.10401506, 0.45793975, 0.10543583, 0.00726485, 0.14019326])
        credit_fail = np.array([11.6307085, 13.3534751, 13.42246797, 12.55813698, 12.57071576, 12.41916586, 12.88294562, 12.95331731, 12.83978824, 13.1462049, 11.96718074, 13.53472465, 12.32385568, 13.71015004, 13.09322289, 13.52602887, 14.06887289, 13.93329359, 13.9871907, 13.20940675, 13.27068338, 13.29220741, 13.01700286, 13.53472465, 12.807232, 13.5076972, 13.36934845, 13.44922025, 12.10071213, 13.89080354, 13.92332406, 12.32385568, 11.81303006, 13.15881488, 13.53472465, 11.41870269, 12.10071213, 13.1640426, 13.11140354, 13.20861447, 13.89080354, 14.48766824, 13.54124607, 12.44784166, 12.73446752, 13.30713194, 13.56950771, 13.50841322, 12.5549674, 12.85852282, 13.0126735, 13.97251431, 13.20861447, 14.04318782, 12.77490582, 13.01700286, 12.50617724, 12.32385568, 12.74781537, 13.36934845, 13.71015004, 12.50450918, 13.01700286, 12.54786286, 13.56818893, 11.81303006, 12.32385568, 11.81303006, 13.1640426, 13.20861447, 12.86617997, 13.14674082, 12.4198747, 12.54936443, 13.01700286, 14.30791454, 14.1080936, 14.00361039, 14.49408812, 12.82970896, 13.75607897, 11.81303006, 12.58421794, 13.75607897, 13.3534751, 12.32385568, 12.66032792, 13.58275408, 12.73446752, 13.01700286, 12.92093239, 13.12088529, 11.50287513, 12.16462546, 12.92093239, 13.37467731, 12.30079174, 13.01700286, 13.06579303, 12.44784166, 11.81303006, 13.20760669, 12.50450918, 13.21945379, 14.16418307, 12.92306574, 12.94089905, 13.20861447, 13.1640426, 13.09322289, 14.01682559, 13.45089992, 13.6229241, 13.56950771, 13.38164598, 13.75727215, 12.17600511, 13.36934845, 11.58821845, 11.91341823, 13.69467086, 12.80268277, 13.01700286, 12.44784166, 12.74658425, 13.31370909, 13.87203077, 12.44823028, 13.63564199, 12.81248477, 14.04376105, 13.93329359, 13.60312147, 13.27936713, 12.44784166, 12.37591668, 10.83840375, 13.14098884, 13.20861447, 12.34248115, 13.43773746, 12.66032792, 11.81303006, 13.75607897, 13.63564199, 13.83994948, 13.60312147, 14.06887289, 13.27896705, 13.08465216, 12.65746669, 12.32385568, 13.78544303, 11.31039304, 13.10317138, 12.44784166, 12.50450918, 13.60372229, 12.73173122, 13.00983725, 13.53472465, 12.50617724, 12.74781537, 12.10071213, 12.55813698, 13.85138915, 12.50617724, 13.1640426, 13.42246797, 13.01700286, 11.98288534, 12.52467182, 12.85852282, 13.4567148, 13.5825212, 14.06887289, 12.10071213, 13.36934845, 12.26198028, 13.75607897, 12.33499343, 12.59530166, 12.10071213, 12.10071213, 13.02695319, 12.41916586, 13.19765636, 13.42079991, 12.32385568, 13.89080354, 13.4752881, 13.1640426, 13.57614997, 12.96887298, 14.06887289, 13.20861447, 14.04376105, 12.96495139, 12.10071213, 13.89080354, 12.59699248, 12.71239163, 12.44784166, 12.59559128, 13.0964146, 13.42246797, 13.27896705, 13.01700286, 13.01700286, 12.14664106, 12.48251618, 12.78138179, 13.71015004, 13.00695253, 13.65151407, 12.48251618, 12.50617724, 12.84591794, 12.55813698, 13.60312147, 12.55813698, 13.60312147, 13.3631708, 12.59243138, 14.61313464, 12.85193952, 13.1567648, 13.29220741, 12.50385788, 13.30380455, 14.04376105, 12.58621995, 11.69462183, 13.56950771, 14.15651714, 12.79385931, 13.53472465, 12.85852282, 13.42640687, 14.06887289, 12.66032792, 12.69778884, 12.44784166, 12.75316752, 13.20861447, 13.69767252, 13.20861447, 12.40900533, 13.89080354, 13.17398952, 13.24013041, 13.11739104, 12.50617724, 13.20861447, 11.67131287, 13.24644653, 12.59906023, 13.06824715, 12.00210653, 13.01700286, 12.28136563, 13.13921164, 12.93553247, 12.91164235, 11.93701604, 13.01700286, 13.19932442, 12.44784166, 13.42246797, 11.91341823, 12.44784166, 12.50617724, 13.60312147, 12.98547091, 12.50450918, 13.36934845, 14.26976583, 12.50617724, 13.498688, 13.6229241, 14.06887289, 13.82240672, 12.50617724, 12.16462546, 13.92332406, 13.20861447, 12.14950229, 12.10071213, 12.50617724, 12.44784166, 13.27936713, 13.11739104, 12.91164235, 12.10071213, 13.75656596, 13.47991893, 13.14383814, 12.50617724, 13.58083831, 12.44784166, 13.60174044, 13.54763111, 13.60312147, 12.55210617, 12.03232622, 12.76071609, 14.04376105, 12.14664106, 12.32385568, 13.19128385, 12.55813698, 14.11561515, 13.06579303, 12.44784166, 13.01700286, 13.97251431, 13.03680549, 13.26902149, 13.39940403, 12.65321698, 13.01700286, 12.49069128, 13.51452438, 13.42246797, 13.18504799, 13.60312147, 12.61518111, 12.32385568, 12.32385568, 13.63564199, 13.19692153, 13.22456972, 13.01700286, 13.17001575, 12.78128053, 13.65873569, 12.52467182, 13.75607897, 12.91164235, 12.32385568, 14.04555028, 12.61398476, 12.4831133, 13.54797223, 13.1640426, 12.04731135, 12.17303279, 12.32006852, 13.06579303, 13.01700286, 11.83843786, 13.36934845, 12.99828884, 12.50450918, 12.58239726, 13.21270122, 13.48017068, 13.35047775, 12.60656541, 12.74781537, 12.32385568, 13.05778966, 13.42246797, 12.3043874, 13.0126735, 13.85718978, 12.50450918, 13.36934845, 12.84264947, 12.59906023, 13.01700286, 14.51555391, 13.67389054, 13.54137038, 13.71015004, 13.29220741, 13.61407957, 13.19765636, 13.01700286, 13.20177142, 13.57614997, 13.66843181, 12.52916107, 13.85718978, 13.90802091, 12.10071213, 13.20861447, 13.00152367, 13.68623638, 13.82240672, 13.26398793, 12.55813698, 13.92332406, 13.82156171, 13.01203052, 13.87042195, 12.91164235, 13.70018051, 12.61077746, 13.42246797, 13.1640426, 13.20861447, 13.29220741, 12.96309563, 13.24013041, 12.86617997, 12.50450918, 13.23108145, 14.06887289, 13.53560616, 13.01700286, 13.36934845, 13.92332406, 12.38212459, 13.42246797, 14.23120022, 12.50617724, 14.25119444, 13.01700286, 12.5549674, 12.61886584, 13.1567648, 13.71015004, 11.69435913, 13.20861447, 13.08398839, 13.08466151, 14.08714709, 12.66443376, 12.99680015, 11.78996612, 14.06887289, 12.47089542, 12.5011982, 13.42246797, 12.44784166, 13.25935278, 13.89080354, 13.63591129, 12.10071213, 12.40900533, 12.10071213, 13.01700286, 13.75894021, 13.27560622, 12.50617724, 12.55468165, 13.80546022, 13.33706984, 13.1640426, 14.1080936, 12.44784166, 13.3219402, 12.44784166, 12.55813698, 12.00464166, 12.18353558, 12.41916586, 12.44784166, 13.26398793, 13.71015004, 13.54763111, 13.22230825, 12.74045853, 12.23694612, 13.05868209, 13.36934845, 13.06845614, 13.20861447, 13.60312147, 12.55813698, 12.90731076, 12.58621995, 13.20861447, 13.71015004, 12.50450918, 12.7020044, 12.69778884, 14.40329722, 13.217819, 12.91164235, 13.7051375, 13.13921164, 13.16087807, 12.87257807, 13.5341286, 13.1868469, 13.20861447, 14.07286421, 12.65344716, 12.40731409, 13.56950771, 13.56950771, 13.1640426, 13.63564199, 12.11184987])
        
        fig = matplotlib.pyplot.figure(figsize=(15,7))
#        ax = sns.scatterplot(x=annuity_ok, y=credit_term_ok, alpha=0.3)
#        sns.scatterplot(x=annuity_fail, y=credit_term_ok, alpha=0.05, ax=ax)
        matplotlib.pyplot.scatter(x=employed_ok, y=credit_ok, alpha=1, label='Payment ok')
        matplotlib.pyplot.scatter(x=employed_fail, y=credit_fail, alpha=0.5, label='Payment problems')
        matplotlib.pyplot.scatter(x=DAYS_EMPLOYED_PERC, y=AMT_CREDIT, s=120, c='red', label='Current client')
        matplotlib.pyplot.xlabel("Client's life part on current employment", fontsize=16)
        matplotlib.pyplot.ylabel('Credit duration', fontsize=16)
        matplotlib.pyplot.legend()
        st.pyplot(fig)

    if plot_choice == 'Decision plot for the individual client':
    #    st.write(len(data)) # for debugging
        data_for_shap = pd.DataFrame(data, columns=columns)
        test_columntransformer = joblib.load('credit_scoring_transformer.pkl')
        X_test_trfm = test_columntransformer.transform(data_for_shap)
    #    st.write('Shape of data for shap:', X_test_trfm.shape) # for debugging
        shap_feature_names = test_columntransformer.get_feature_names_out()
        shap_feature_names = [x.replace('standardscaler__', '').replace('onehotencoder__', '') for x in shap_feature_names]
    #    st.write(shap_feature_names.shape) # for debugging
    #    st.write(shap_feature_names) # for debugging
        linear_explainer = joblib.load(filename='explainer.bz2')
        shap_vals = linear_explainer.shap_values(X_test_trfm[0])
    #    st.write("Prediction From Adding SHAP Values to Base Value:", linear_explainer.expected_value + shap_vals.sum())

        fig_shap = matplotlib.pyplot.figure()
        st.pyplot(fig_shap, shap.decision_plot(linear_explainer.expected_value,
                       linear_explainer.shap_values(X_test_trfm[0]),
                       link='logit',
                        feature_names=shap_feature_names, # TypeError: The feature_names arg requires a list or numpy array.
    #                     feature_names=shap_feature_names.tolist(), #AttributeError: 'list' object has no attribute 'tolist'
    #                   matplotlib=True # https://discuss.streamlit.io/t/shap-shap-force-plot-on-streamlit/10071/2  Oct '21
                       ))
    # another workaround see on https://gist.github.com/andfanilo/6bad569e3405c89b6db1df8acf18df0e   
    # another workaround see on https://discuss.streamlit.io/t/display-shap-diagrams-with-streamlit/1029/9

    if plot_choice == 'Global feature importances':
        st.image('shap_summary_plot.png', caption='Importance on the most relavant features on the set of all customers')
if __name__ == '__main__':
    main()